<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.6">
  <POU Name="FB_AUT_130" Id="{aabc6712-002c-446d-a55f-42f6063f8dd2}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_AUT_130 EXTENDS FB_AUT_ABSTRACT
(****************************************************************************)
(*	POU_AUT_zxx			Bausteinaufrufe Station	zxx							*)
(*	Status				ungetestet											*)
(*  Version:			1.0													*)
(*	Beschrieb:																*)
(*																			*)
(*	Abläufe:			FB_ABLzxxA		Hauptablauf							*)
(*																			*)
(*																			*)
(* 	25.09.2019/Dj															*)
(****************************************************************************)
(*	dd.mm.yyyy   KZ    x.y			Beschrieb								*)
(****************************************************************************)
VAR_INPUT
    (* spezifische Eingänge *)

END_VAR
VAR_OUTPUT
    (* spezifische Ausgänge *)

END_VAR
VAR
    (* Bausteine *)
    fb_Dose : FB_ABL_130_Dose;

END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[(*******************************************************************)
(* Timer *)
(*******************************************************************)

(*******************************************************************)
(* Flanken / Merker *)
(*******************************************************************)
//MANU CYCLE
IF (enIN_State = StateMANU) AND xIN_ManuCycle THEN
    xManuCycle := TRUE;
END_IF;

IF (enIN_State <> StateMANU) OR xOUT_Done THEN
    xManuCycle := FALSE;
END_IF

//NEXT STEP
xNextStep := (enIN_State > StateSTEP) OR
             ((enIN_State = StateSTEP) AND xIN_Step) OR
             ((enIN_State = StateMANU) AND xManuCycle);

//RESET
xReset := (enIN_State < StateREADY) AND (enIN_State <> StateINIT) AND NOT xManuCycle;

(*******************************************************************)
(* Bausteinaufrufe Abläufe *)
(*******************************************************************)

fb_Dose(xIN_Reset          := xReset,
       xIN_Init           := xIN_Init,
       xIN_Quit           := xIN_Quit,
       xIN_Start          := enIN_State = enState.StateAUTO, //AND _FB_ABL_100A.xOUT_Done AND _FB_ABL_100A.xOUT_Ready,
       xIN_Sperre         := NOT xIN_On,
       xIN_NextStep       := xNextStep,
       xIN_AlarmAktiv     := xIN_AlarmAktiv,
       xIN_DryCycle       := xIN_DryCycle,
       xIN_RestartCYCL    := enIN_State = enState.StateAUTO, // only restart when the mover has move out
       enIN_State         := enIN_State,
       tIN_Timeout        := tIN_Timeout,
       pxFG_Freigabe      := ADR(xDummy),
       Mover              := THIS^.Mover);

(*******************************************************************)
(* Mover reset flags *)
(*******************************************************************)

(*******************************************************************)
(* OUTPUT *)
(*******************************************************************)
xOUT_InitDone := fb_Dose.xOUT_InitDone;
xOUT_Ready    := fb_Dose.xOUT_Ready;
xOUT_Done     := fb_Dose.xOUT_Done;
xOUT_ErrFlag  := fb_Dose.xOUT_ErrFlag;
xOUT_Wait     := fb_Dose.xOUT_Wait;
xOUT_AlarmST  := xOUT_ErrFlag;

(*******************************************************************)
(* Bausteinaufruf Error Station *)
(*******************************************************************)
// POU_ERR_VORLAGE(xIN_QUIT:=xIN_Quit , pstrArIN_ALARM:=ADR(HMI.strArALARM[1]));
]]></ST>
    </Implementation>
    <Method Name="GiveMover" Id="{02e21666-246e-4b7b-a079-ea2f9f8578c0}">
      <Declaration><![CDATA[METHOD GiveMover : IProcessSampleMover
VAR_INPUT
	mover : REFERENCE TO FB_Mover;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF __ISVALIDREF(mover) THEN
    THIS^.Mover                       REF= mover;
END_IF
]]></ST>
      </Implementation>
    </Method>
    <Property Name="iCompletionPC" Id="{a6312a84-bdfa-44ce-8e04-c9e231e2340c}">
      <Declaration><![CDATA[(* % of completion of the process *)
PROPERTY iCompletionPC : INT
]]></Declaration>
      <Get Name="Get" Id="{68ad4865-5843-4968-9afb-1ed0fc0d671f}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[iCompletionPC := THIS^.fb_Dose.iOUT_ProcessCompletion;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="ProcessExecution" Id="{d87c4446-298f-49bd-be30-3867757bc7eb}">
      <Declaration><![CDATA[PROPERTY ProcessExecution : ProcessExecution_e]]></Declaration>
      <Get Name="Get" Id="{ecf337d4-2712-419b-ad0b-e0ca1057b401}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[ProcessExecution := THIS^._ProcessExecution;
]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{689f384d-3307-4429-b6ea-0a70259f8823}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[THIS^._ProcessExecution := ProcessExecution;
]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Method Name="TakeMover" Id="{6e685521-c802-4513-8a5f-33dd88d9cb4a}">
      <Declaration><![CDATA[METHOD TakeMover : IProcessSampleMover
VAR_INPUT
END_VAR

]]></Declaration>
      <Implementation>
        <ST><![CDATA[THIS^.Mover REF= 0;]]></ST>
      </Implementation>
    </Method>
    <Property Name="xBusy" Id="{d7403fc9-ab79-40a2-b205-fdd7afb85837}">
      <Declaration><![CDATA[PROPERTY xBusy : BOOL]]></Declaration>
      <Get Name="Get" Id="{8d8117ef-acf2-4a79-bfa3-f4beee5a809b}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[xBusy := THIS^.fb_Dose.xOUT_Busy;
]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{8a417c9c-b913-4c95-b965-485fa973e661}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Property Name="xDone" Id="{151d7923-ba15-4380-96a6-a22c27ea74e0}">
      <Declaration><![CDATA[PROPERTY xDone : BOOL]]></Declaration>
      <Get Name="Get" Id="{8c05b73b-594a-4c39-af60-b2a891e3b0cc}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[xDone := THIS^.fb_Dose.xOUT_Ready OR THIS^.fb_Dose.xOUT_Done;
]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="xMoverPathFree" Id="{72c8ed4a-52c7-4268-8661-42711cbe97bb}">
      <Declaration><![CDATA[PROPERTY xMoverPathFree : BOOL]]></Declaration>
      <Get Name="Get" Id="{0de9805a-be8f-4322-a342-e80cba055a76}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[xMoverPathFree := THIS^.fb_Dose.xOUT_MoverFree OR THIS^.fb_Dose.xOUT_Ready OR THIS^.fb_Dose.xOUT_Done;
]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="xMoverShouldLeave" Id="{cc9a3f79-f20e-4845-acf0-98e6bde159cb}">
      <Declaration><![CDATA[PROPERTY xMoverShouldLeave : BOOL]]></Declaration>
      <Get Name="Get" Id="{3d3e22a4-131b-468d-b0c9-59c2cfe06f9a}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[xMoverShouldLeave := THIS^.fb_Dose.iOUT_Step = ST130_Dose_e.SYNC_MOVER_LEAVE;
]]></ST>
        </Implementation>
      </Get>
    </Property>
  </POU>
</TcPlcObject>