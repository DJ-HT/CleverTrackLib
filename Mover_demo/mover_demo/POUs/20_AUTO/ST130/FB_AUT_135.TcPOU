<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.6">
  <POU Name="FB_AUT_135" Id="{4b227072-0113-4f77-88e6-997805f8ddf5}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_AUT_135 EXTENDS FB_AUT_ABSTRACT
(****************************************************************************)
(*	POU_AUT_zxx			Bausteinaufrufe Station	zxx							*)
(*	Status				ungetestet											*)
(*  Version:			1.0													*)
(*	Beschrieb:																*)
(*																			*)
(*	Abläufe:			FB_ABLzxxA		Hauptablauf							*)
(*																			*)
(*																			*)
(* 	25.09.2019/Dj															*)
(****************************************************************************)
(*	dd.mm.yyyy   KZ    x.y			Beschrieb								*)
(****************************************************************************)
VAR_INPUT
    (* spezifische Eingänge *)

END_VAR
VAR_OUTPUT
    (* spezifische Ausgänge *)

END_VAR
VAR
    (* Bausteine *)
    fb_Dose : FB_ABL_MODIFY_135;

    fb_stat : FB_AUT_Statistics;

END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[(*******************************************************************)
(* Timer *)
(*******************************************************************)

(*******************************************************************)
(* Flanken / Merker *)
(*******************************************************************)
//MANU CYCLE
IF (enIN_State = StateMANU) AND xIN_ManuCycle THEN
    xManuCycle := TRUE;
END_IF;

IF (enIN_State <> StateMANU) OR xOUT_Done THEN
    xManuCycle := FALSE;
END_IF

//NEXT STEP
xNextStep := (enIN_State > StateSTEP) OR
             ((enIN_State = StateSTEP) AND xIN_Step) OR
             ((enIN_State = StateMANU) AND xManuCycle);

//RESET
xReset := (enIN_State < StateREADY) AND (enIN_State <> StateINIT) AND NOT xManuCycle;

(*******************************************************************)
(* Bausteinaufrufe Abläufe *)
(*******************************************************************)

xRelease := MAIN.MoverMan.IsProcessUsed(THIS^);

fb_Dose(xIN_Reset         := xReset,
        xIN_Init          := xIN_Init,
        xIN_Quit          := xIN_Quit,
        xIN_Start         := enIN_State >= enState.StateLEER, //AND _FB_ABL_100A.xOUT_Done AND _FB_ABL_100A.xOUT_Ready,
        xIN_Sperre        := NOT xIN_On,
        xIN_NextStep      := xNextStep,
        xIN_AlarmAktiv    := xIN_AlarmAktiv,
        xIN_DryCycle      := xIN_DryCycle,
        xIN_RestartCYCL   := enIN_State >= enState.StateLEER, // only restart when the mover has move out
        enIN_State        := enIN_State,
        tIN_Timeout       := tIN_Timeout,
        pxFG_Freigabe     := ADR(xRelease),
        Mover             := THIS^.Mover,
        iProcessTimeMili1 := DINT_TO_UDINT(THIS^.iProcessTimeMili_1),
        iProcessTimeMili2 := DINT_TO_UDINT(THIS^.iProcessTimeMili_2));

fb_stat(xIN_Enable  := enState.StateAUTO = enIN_State,
        xIN_Waiting := fb_Dose.xOUT_Wait,
        xIN_Running := (fb_Dose.iOUT_Step >= ST130_Dose_e.START) AND
                       (fb_Dose.iOUT_Step <= ST130_Dose_e.DONE),
        // Since we use a mover system, a cycle is done when we are waiting on a mover
        xIN_Done := fb_Dose.iOUT_Step = ST130_Dose_e.waitOnMover);

(*******************************************************************)
(* Mover reset flags *)
(*******************************************************************)

(*******************************************************************)
(* OUTPUT *)
(*******************************************************************)
xOUT_InitDone := fb_Dose.xOUT_InitDone;
xOUT_Ready    := fb_Dose.xOUT_Ready;
xOUT_Done     := fb_Dose.xOUT_Done;
xOUT_ErrFlag  := fb_Dose.xOUT_ErrFlag;
xOUT_Wait     := fb_Dose.xOUT_Wait;
xOUT_AlarmST  := xOUT_ErrFlag;

(*******************************************************************)
(* Bausteinaufruf Error Station *)
(*******************************************************************)
// POU_ERR_VORLAGE(xIN_QUIT:=xIN_Quit , pstrArIN_ALARM:=ADR(HMI.strArALARM[1]));
]]></ST>
    </Implementation>
    <Property Name="iCompletionPC" Id="{e5afb44a-b839-4353-a822-6cb3a303b84e}">
      <Declaration><![CDATA[(* % of completion of the process *)
PROPERTY iCompletionPC : INT
]]></Declaration>
      <Get Name="Get" Id="{18d97c92-7b1d-47b2-ada2-7eca9255f0f1}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[iCompletionPC := THIS^.fb_Dose.iOUT_ProcessCompletion;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="iProcessTimeMili_1" Id="{8b8d3321-8551-47b7-947f-ce7944fdc144}">
      <Declaration><![CDATA[(* Process time, expressed in milisecond *)
PROPERTY iProcessTimeMili_1 : DINT
]]></Declaration>
      <Get Name="Get" Id="{ca969f16-173f-4371-bf5a-27037ece7e47}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[iProcessTimeMili_1 := TO_DINT(1000);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="iProcessTimeMili_2" Id="{f932a916-5671-4d73-b296-c72eae622a0f}">
      <Declaration><![CDATA[(* Process time, expressed in milisecond *)
PROPERTY iProcessTimeMili_2 : DINT
]]></Declaration>
      <Get Name="Get" Id="{63d571c7-1d88-4c08-ad74-cbd04b98c35f}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[iProcessTimeMili_2 := TO_DINT(1000);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="ProcessExecution" Id="{fe1cd809-adca-4ef1-bbda-9f7425ca332b}">
      <Declaration><![CDATA[PROPERTY ProcessExecution : ProcessExecution_e]]></Declaration>
      <Get Name="Get" Id="{f590280d-acd0-40ce-9104-c62466697a4d}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[ProcessExecution := THIS^._ProcessExecution;
]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{2f4acef5-52a3-4f20-891a-42a55a951177}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[THIS^._ProcessExecution := ProcessExecution;
]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Property Name="xBusy" Id="{b3e416da-0b3a-40d3-921d-f54826459927}">
      <Declaration><![CDATA[PROPERTY xBusy : BOOL]]></Declaration>
      <Get Name="Get" Id="{8cfd0c2d-1582-4aae-acf3-de8785065b87}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[xBusy := THIS^.fb_Dose.xOUT_Busy;
]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{998d78e3-50b8-433d-bf47-89265ab7118f}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Property Name="xDone" Id="{00c2234d-6989-48cc-8cf0-8ca8237a960c}">
      <Declaration><![CDATA[PROPERTY xDone : BOOL]]></Declaration>
      <Get Name="Get" Id="{178e1f5c-e02f-4e65-a152-0dc54d988d2a}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[xDone := THIS^.fb_Dose.xOUT_Ready OR THIS^.fb_Dose.xOUT_Done;
]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="xMoverPathFree" Id="{c737ac33-8a58-44af-84b1-043cc57a5828}">
      <Declaration><![CDATA[PROPERTY xMoverPathFree : BOOL]]></Declaration>
      <Get Name="Get" Id="{2328b072-d040-4026-8300-7fe9bb4f9ca3}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[xMoverPathFree := THIS^.fb_Dose.xOUT_MoverFree OR THIS^.fb_Dose.xOUT_Ready OR THIS^.fb_Dose.xOUT_Done;
]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="xMoverShouldLeave" Id="{a5559518-dfc3-4dc7-8ddd-24830ae2c058}">
      <Declaration><![CDATA[PROPERTY xMoverShouldLeave : BOOL]]></Declaration>
      <Get Name="Get" Id="{298ed05d-fbba-4f8c-a390-8c5233ae84f1}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[xMoverShouldLeave := THIS^.fb_Dose.iOUT_Step = ST100_Modify_e.SYNC_MOVER_LEAVE;
]]></ST>
        </Implementation>
      </Get>
    </Property>
  </POU>
</TcPlcObject>