<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.6">
  <POU Name="FB_AUT_120" Id="{07fc33ac-e681-4690-8465-bb1c2578b188}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_AUT_120 EXTENDS FB_AUT_ABSTRACT
(****************************************************************************)
(*	POU_AUT_zxx			Bausteinaufrufe Station	zxx							*)
(*	Status				ungetestet											*)
(*  Version:			1.0													*)
(*	Beschrieb:																*)
(*																			*)
(*	Abläufe:			FB_ABLzxxA		Hauptablauf							*)
(*																			*)
(*																			*)
(* 	25.09.2019/Dj															*)
(****************************************************************************)
(*	dd.mm.yyyy   KZ    x.y			Beschrieb								*)
(****************************************************************************)
VAR_INPUT
    (* spezifische Eingänge *)

END_VAR
VAR_OUTPUT
    (* spezifische Ausgänge *)

END_VAR
VAR
    (* Bausteine *)
    fb_Pnp    : FB_ABL_120_Pnp;
    fb_Feeder : FB_ABL_120_Feeder;

    fb_stat_pnp    : FB_AUT_Statistics;
    fb_stat_Feeder : FB_AUT_Statistics;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[(*******************************************************************)
(* Timer *)
(*******************************************************************)

(*******************************************************************)
(* Flanken / Merker *)
(*******************************************************************)
//MANU CYCLE
IF (enIN_State = StateMANU) AND xIN_ManuCycle THEN
    xManuCycle := TRUE;
END_IF;

IF (enIN_State <> StateMANU) OR xOUT_Done THEN
    xManuCycle := FALSE;
END_IF

//NEXT STEP
xNextStep := (enIN_State > StateSTEP) OR
             ((enIN_State = StateSTEP) AND xIN_Step) OR
             ((enIN_State = StateMANU) AND xManuCycle);

//RESET
xReset := (enIN_State < StateREADY) AND (enIN_State <> StateINIT) AND NOT xManuCycle;

(*******************************************************************)
(* Bausteinaufrufe Abläufe *)
(*******************************************************************)

xRelease := MAIN.MoverMan.IsProcessUsed(THIS^);

fb_Pnp(xIN_Reset          := xReset,
       xIN_Init           := xIN_Init,
       xIN_Quit           := xIN_Quit,
       xIN_Start          := enIN_State = enState.StateAUTO AND xRelease,
       xIN_Sperre         := NOT xIN_On,
       xIN_NextStep       := xNextStep,
       xIN_AlarmAktiv     := xIN_AlarmAktiv,
       xIN_DryCycle       := xIN_DryCycle,
       xIN_RestartCYCL    := enIN_State >= enState.StateLEER,
       enIN_State         := enIN_State,
       tIN_Timeout        := tIN_Timeout,
       pxFG_Freigabe      := ADR(xRelease),
       Mover              := THIS^.Mover,
       xIN_PceReadyToPick := ST120_Feeder_e.wait_pce_picked = fb_Feeder.iOUT_Step);

fb_Feeder(xIN_Reset          := xReset,
          xIN_Init           := xIN_Init,
          xIN_Quit           := xIN_Quit,
          xIN_Start          := enIN_State >= enState.StateLEER AND xRelease,
          xIN_Sperre         := NOT xIN_On,
          xIN_NextStep       := xNextStep,
          xIN_AlarmAktiv     := xIN_AlarmAktiv,
          xIN_DryCycle       := xIN_DryCycle,
          xIN_RestartCYCL    := enIN_State >= enState.StateLEER,
          enIN_State         := enIN_State,
          tIN_Timeout        := tIN_Timeout,
          pxFG_Freigabe      := ADR(xRelease),
          xIN_PickPiece      := fb_Pnp.xOUT_PickPiece,
          xIN_PnpGripperOpen := TRUE, // TODO replace by sensor of gripper open
          xIN_PnpNotOnTheWay := (ST120_Axis.axis120_02Z.rActPos < 20.0) OR
                                (ST120_Axis.axis120_01Y.rActPos < 100.0));

fb_stat_pnp(xIN_Enable  := enState.StateAUTO = enIN_State,
            xIN_Waiting := fb_Pnp.xOUT_Wait,
            xIN_Running := (fb_Pnp.iOUT_Step >= ST120_Pnp_e.START) AND
                           (fb_Pnp.iOUT_Step <= ST120_Pnp_e.DONE),
            // Since we use a mover system, a cycle is done when we are waiting on a mover
            xIN_Done := fb_Pnp.iOUT_Step = ST120_Pnp_e.waitOnMover);

fb_stat_Feeder(xIN_Enable  := enState.StateAUTO = enIN_State,
               xIN_Waiting := fb_feeder.xOUT_Wait,
               xIN_Running := (fb_feeder.iOUT_Step >= ST120_Feeder_e.START) AND
                              (fb_feeder.iOUT_Step <= ST120_Feeder_e.DONE),
               xIN_Done := fb_feeder.iOUT_Step = ST120_Feeder_e.DONE);

(*******************************************************************)
(* Mover reset flags *)
(*******************************************************************)

(*******************************************************************)
(* OUTPUT *)
(*******************************************************************)
xOUT_InitDone := fb_Pnp.xOUT_InitDone AND fb_Feeder.xOUT_InitDone;
xOUT_Ready    := fb_Pnp.xOUT_Ready AND fb_Feeder.xOUT_Ready;
xOUT_Done     := fb_Pnp.xOUT_Done; // we ignore feeder
xOUT_ErrFlag  := fb_Pnp.xOUT_ErrFlag OR fb_Feeder.xOUT_ErrFlag;
xOUT_Wait     := fb_Pnp.xOUT_Wait OR fb_Feeder.xOUT_Wait;
xOUT_AlarmST  := xOUT_ErrFlag;

(*******************************************************************)
(* Bausteinaufruf Error Station *)
(*******************************************************************)
POU_ALARM_120(xIN_QUIT      := xIN_Quit,
              iIN_ArraySize := ST120_Alarm_e._max,
              pstrIN_ALARM  := ADR(HMI.strArALARM[61]),
              refPOU        := THIS^);
]]></ST>
    </Implementation>
    <Property Name="iCompletionPC" Id="{03075cd2-bd5e-4e2b-8611-2038c53b61b5}">
      <Declaration><![CDATA[(* % of completion of the process *)
PROPERTY iCompletionPC : INT
]]></Declaration>
      <Get Name="Get" Id="{483c721b-086a-46f4-961b-fffa56fd6010}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[iCompletionPC := THIS^.fb_Pnp.iOUT_ProcessCompletion;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="ProcessExecution" Id="{89617800-11b5-4a67-b62f-99c57ae52cf1}">
      <Declaration><![CDATA[PROPERTY ProcessExecution : ProcessExecution_e]]></Declaration>
      <Get Name="Get" Id="{64cdc905-5738-4f46-a6b5-fd0fdaa30521}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[ProcessExecution := THIS^._ProcessExecution;
]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{a1bde721-8638-44fa-bd57-1dd040c95d0f}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[THIS^._ProcessExecution := ProcessExecution;
]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Property Name="xBusy" Id="{3b5341ab-9f28-41d8-922d-39a244156b0a}">
      <Declaration><![CDATA[PROPERTY xBusy : BOOL]]></Declaration>
      <Get Name="Get" Id="{a4f33c8e-ce3e-4c8f-81ec-ab04256cd23e}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[xBusy := THIS^.fb_Pnp.xOUT_Busy;
]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{e247088e-6e2f-4504-b434-76383098a81a}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Property Name="xDone" Id="{d6e258e2-1916-4f30-a565-d3e0e9ccfc11}">
      <Declaration><![CDATA[PROPERTY xDone : BOOL]]></Declaration>
      <Get Name="Get" Id="{a804fcdd-1de0-453b-b142-d679b8694941}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[xDone := THIS^.fb_Pnp.xOUT_Ready OR THIS^.fb_Pnp.xOUT_Done;
]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="xMoverPathFree" Id="{b4523312-cfd3-4ab3-80c6-d58a4078f990}">
      <Declaration><![CDATA[PROPERTY xMoverPathFree : BOOL]]></Declaration>
      <Get Name="Get" Id="{bf7dc33d-7606-4e97-9171-a5d84a68993a}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[xMoverPathFree := THIS^.fb_Pnp.xOUT_MoverFree OR THIS^.fb_Pnp.xOUT_Ready OR THIS^.fb_Pnp.xOUT_Done;
]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="xMoverShouldLeave" Id="{0a2968e6-26d6-40a5-a04b-292a953b4260}">
      <Declaration><![CDATA[PROPERTY xMoverShouldLeave : BOOL]]></Declaration>
      <Get Name="Get" Id="{33a700fc-3c4b-41f6-acb1-c03b6508f376}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[xMoverShouldLeave := THIS^.fb_Pnp.iOUT_Step = ST120_Pnp_e.SYNC_MOVER_LEAVE;
]]></ST>
        </Implementation>
      </Get>
    </Property>
  </POU>
</TcPlcObject>