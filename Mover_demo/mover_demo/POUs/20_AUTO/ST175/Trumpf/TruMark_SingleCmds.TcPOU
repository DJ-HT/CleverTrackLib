<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.6">
  <POU Name="TruMark_SingleCmds" Id="{614b82a3-fb9c-49f9-9020-e5d655b3aba7}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM TruMark_SingleCmds
(*
	TRUMPF Laser Marking Systems
	============================
	created: 11.01.2019 Erik Haller
	
     +============+
     |SingleCmds  |
     +============+
          |
          v
       +--+------+
       |Input    |	 Interface
       |  -----  |   if_TruMark
       |Output   |
       |  -----  |
       +---------+
               ^
               |
    +==================+
    |TruMark_Ethercat  |
    +==================+
	
	Software Disclaimer:
	THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
	THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. 
	IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, 
	OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
	OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
	ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*)



VAR
	iStep : INT;
	abB1 : ARRAY [0..7] OF BOOL;	// used for TLV request 20261
	abB2 : ARRAY [0..7] OF BOOL;	// used for TLV request 20261
	iBitNo : INT;
	sFileName : STRING;
	sVar : STRING;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF if_TruMark.bError THEN
	iStep := 0;
END_IF

CASE iStep OF
	0: 		// Initialisation
		IF NOT if_TruMark.bError AND NOT if_TruMark.bBusy THEN
			if_SingleCmds.bReady := TRUE;
			iStep := 5;
		END_IF
	
	5:		
		// ---------------------------------------------------------
		// TruMark_Ethercat is Ready --> SELECT Step-No
		// ---------------------------------------------------------
		
		IF if_SingleCmds.bStart THEN
			if_SingleCmds.bStart := FALSE;
			if_SingleCmds.bReady := FALSE;
			iStep := if_SingleCmds.iStepNr;
		END_IF
	
// ============================================================================================================================
// 			T L V   C O M M A N D S		iStep: 10 - 100
// ============================================================================================================================
		
	10:		// -----------------------------------------------------------
			// TLV - Activate Laser / Open Shutter				Attention! Not all Marking Laser have a Shutter
			// -----------------------------------------------------------
		IF NOT if_TruMark.bBusy THEN
			if_TruMark.diTlvTag := 20201;
			if_TruMark.sTlvValueIn := '1';
			if_TruMark.bTlvCmd := TRUE;	
		ELSE
			iStep := 11;
		END_IF
	11:		// Wait for response
		IF NOT if_TruMark.bBusy AND if_TruMark.Status.b0_Laser_On (*AND if_TruMark.Status.b1_Laser_Ready AND if_TruMark.Status.b3_Shutter_Open *) THEN
			iStep := 0;
		END_IF
		
	12:		// -----------------------------------------------------------
			// TLV - Deactivate Laser / Close Shutter				Attention! Not all Marking Laser have a Shutter
			// -----------------------------------------------------------
		IF NOT if_TruMark.bBusy THEN
			if_TruMark.diTlvTag := 20201;
			if_TruMark.sTlvValueIn := '0';
			if_TruMark.bTlvCmd := TRUE;
		ELSE
			iStep := 13;
		END_IF
	13:		// Wait for response
		IF NOT if_TruMark.bBusy AND NOT if_TruMark.Status.b0_Laser_On AND NOT if_TruMark.Status.b1_Laser_Ready (* AND NOT if_TruMark.Status.b3_Shutter_Open *) THEN
			iStep := 0;
		END_IF
				
	20:		// -----------------------------------------------------------
			// TLV - Load Marking File
			// -----------------------------------------------------------
		IF NOT if_TruMark.bBusy THEN
			if_TruMark.diTlvTag := 20401;
			if_TruMark.sTlvValueIn := if_SingleCmds.sInputValue;
			if_TruMark.bTlvCmd := TRUE;	
		ELSE
			iStep := 21;
		END_IF
	21:		// Wait for response
			// Default settings: Convert at start marking - Option: Convert at load marking file
			// 					TruTops Mark application: Extras -> 7 Konfiguration -> Verschiedenes [Zeitpunkt der Konvertierung]
		IF NOT if_TruMark.bBusy AND NOT if_TruMark.bError AND NOT if_TruMark.Status.b16_Conversion_Active THEN
			sFileName := if_SingleCmds.sInputValue;
			iStep := 0;
		END_IF

	30:		// -----------------------------------------------------------
			// TLV - Request state of conversion
			// -----------------------------------------------------------
		IF NOT if_TruMark.bBusy THEN
			if_TruMark.diTlvTag := 20222;
			if_TruMark.sTlvValueIn := '';
			if_TruMark.bTlvCmd := TRUE;
		ELSE
			iStep := 31;
		END_IF
	31:		// Wait for response
		// Option a). check TLV response
		IF NOT if_TruMark.bBusy AND NOT if_TruMark.bError THEN
			IF SIZEOF(if_TruMark.sTlvRespons) = 4 THEN			// The expected response has 4 bytes - 0x30, 0x00, [0x30 or 0x31], 0x00
				IF if_TruMark.sTlvRespons[2] = 16#30 THEN  
					iStep := 0;			// ASCII code 0x30 = '0' --> conversion is not active
				ELSE
					iStep := 30;		// ASCII code 0x31 = '1' --> conversion is active
										// Loop with TLV-Request and check on TLV-Response
				END_IF
			END_IF
		END_IF
		
		// Option b). check BIT-Status of bit 16
		IF NOT if_TruMark.bBusy AND NOT if_TruMark.bError AND NOT if_TruMark.status.b16_Conversion_Active THEN
			iStep := 0;
		END_IF

	35:		// -----------------------------------------------------------
			// TLV - Set Variable
			// -----------------------------------------------------------
		IF NOT if_TruMark.bBusy THEN
			if_TruMark.diTlvTag := 20421;
			if_TruMark.sTlvValueIn := if_SingleCmds.sInputValue;
			if_TruMark.bTlvCmd := TRUE;	
		ELSE
			iStep := 36;
		END_IF
	36:		// Wait for response
		IF NOT if_TruMark.bBusy AND NOT if_TruMark.bError THEN
			sVar := if_SingleCmds.sInputValue;
			iStep := 0;
		END_IF

	40:		// -----------------------------------------------------------
			// TLV - Request Laser state
			// -----------------------------------------------------------
		IF NOT if_TruMark.bBusy THEN
			if_TruMark.diTlvTag := 20261;
			if_TruMark.sTlvValueIn := '';
			if_TruMark.bTlvCmd := TRUE;
		ELSE
			iStep := 41;
		END_IF
	41:		// Wait for response
		IF NOT if_TruMark.bBusy AND NOT if_TruMark.bError THEN
			IF LEN(if_TruMark.sTlvRespons) = 20 THEN		// The expected response has 20 bytes
															// BitNo			0  1  2  3  4  5  6  7  8  9  10 11 12 13 14 15 16 17 18 19
															// TLV-Resp HEX:	30 00 30 30 30 30 31 31 31 31 00 30 30 30 31 31 30 30 30 00
															// TLV-Resp 		0  ;  0  0  0  0  1  1  1  1  ;  0  0  0  1  1  0  0  0  ;
															// Desc.			rc    B1                         B2	
				FOR iBitNo := 0 TO 7 BY 1 DO
					abB1[7-iBitNo] := if_TruMark.sTlvRespons[iBitNo+2] = 16#31;		// ASCII Code 0x31 = '1'
					abB2[7-iBitNo] := if_TruMark.sTlvRespons[iBitNo+11] = 16#31;
				END_FOR
				
				// Set your conditions	--> e.g. B1-Bit 7-0=00011111 / B2-Bit 15-8=01011011
				(*
					B1 [7-0]:
					Bit 7: 1	Laser hat eine Störung
					Bit 6: 1	Überwachung Laser hat angesprochen
					Bit 5: 0	Laser stabil (Diodenstrom im Band)
					Bit 4: 1	Strahlaufweiter in Position
					Bit 3: 1	Verschluss ist offen
					Bit 2: 1	Sicherheitskreis ist geschlossen
					Bit 1: 1	Laser ist bereit
					Bit 0: 1	Strahlquelle ist Ein
					
					B2 [15–8]:
					Bit 15: 1	Steuerung ist ein
					Bit 14: 1	Heizphase Laser ist ein
					Bit 13: 1	Not-Aus-Kreis ist geschlossen
					Bit 12: 1	Schlüsselschalter Lasersperre ist geschlossen.
					Bit 11: 1	Steuerung selbst ausschalten aktiviert
					Bit 10: 1	Q-Switch Trigger ist ein
					Bit 9:  1	Laserwarnlampe ist ein
					Bit 8:  1	Pilotlaser ist ein
				*)
				(* Original IF      abB1[0] AND abB1[1] AND     abB1[2] AND NOT abB1[3] AND abB1[4] AND abB1[5] AND NOT abB1[6] AND NOT abB1[7]
				AND NOT abB2[0] AND abB2[1] AND NOT abB2[2] AND NOT abB2[3] AND abB2[4] AND abB2[5] AND NOT abB2[6] AND     abB2[7] 
				*)
				IF      abB1[0] (* AND abB1[1] AND abB1[2] AND abB1[3] *)AND abB1[4] AND abB1[5] AND NOT abB1[6] AND NOT abB1[7]
				AND NOT abB2[0] AND abB2[1] AND NOT abB2[2] AND NOT abB2[3] AND abB2[4] AND abB2[5] AND NOT abB2[6] AND     abB2[7] 
				THEN  
					iStep := 0;
				ELSE
					// Conditions not matched
					iStep := 40;
				END_IF
				
				// We may be blocked for nothing, so we retry the command
			ELSIF NOT if_TruMark.bTlvCmd THEN
					iStep := 40;
			END_IF
		END_IF

	50:		// -----------------------------------------------------------
			// TLV - Start marking
			// -----------------------------------------------------------
		IF NOT if_TruMark.bBusy THEN
			if_TruMark.diTlvTag := 20204;
			if_TruMark.sTlvValueIn := '';
			if_TruMark.bTlvCmd := TRUE;
		ELSE
			iStep := 51;
		END_IF
	51:		// Wait for response
		IF NOT if_TruMark.bBusy THEN
			IF NOT if_TruMark.bError THEN
				IF NOT if_TruMark.Status.b15_Mark_Active THEN
					iStep := 0;	
				END_IF
			ELSE
				// Error
			END_IF
		END_IF

	55:		// -----------------------------------------------------------
			// TLV - Convert marking file
			// -----------------------------------------------------------
		IF NOT if_TruMark.bBusy THEN
			if_TruMark.diTlvTag := 20402;
			if_TruMark.sTlvValueIn := '';
			if_TruMark.bTlvCmd := TRUE;	
		ELSE
			iStep := 56;
		END_IF
	56:		// Wait for response
		IF NOT if_TruMark.bBusy AND NOT if_TruMark.bError THEN
			iStep := 0;
		END_IF		

// ============================================================================================================================
// 			B I T   C O M M A N D S		iStep: 100 - 200
// ============================================================================================================================
		
	100:	// -------------------------------------------------------
			// BIT 0 - Activate Laser / Open Shutter				Attention! Not all Marking Laser have a Shutter
			// -------------------------------------------------------
		if_TruMark.dwBitIn.0 := TRUE;
		if_TruMark.bBitCmd := TRUE;	
		iStep := 101;
	101:	// Wait for response
		IF NOT if_TruMark.bBusy AND if_TruMark.Status.b0_Laser_On AND if_TruMark.Status.b1_Laser_Ready (* AND if_TruMark.Status.b3_Shutter_Open *) THEN
			iStep := 0;
		END_IF
		
	102:	// -------------------------------------------------------
			// BIT 0 - Deactivate Laser / Close Shutter
			// -------------------------------------------------------
		if_TruMark.dwBitIn.0 := FALSE;
		if_TruMark.bBitCmd := TRUE;
		iStep := 103;
	103:	// Wait for response
		IF  NOT if_TruMark.bBusy AND NOT if_TruMark.Status.b0_Laser_On AND NOT if_TruMark.Status.b1_Laser_Ready (* AND NOT if_TruMark.Status.b3_Shutter_Open *) THEN
			iStep := 0;
		END_IF

	110:	// -------------------------------------------------------
			// BIT 1 - Open Shutter		Attention! Not all Marking Laser have a Shutter
			// -------------------------------------------------------
		if_TruMark.dwBitIn.1 := TRUE;
		if_TruMark.bBitCmd := TRUE;
		iStep := 111;
	111:	// Wait for response
		IF NOT if_TruMark.bBusy AND if_TruMark.Status.b3_Shutter_Open THEN
			iStep := 0;
		END_IF
		
	112:	// -------------------------------------------------------
			// BIT 1 - Close Shutter
			// -------------------------------------------------------
		if_TruMark.dwBitIn.1 := FALSE;
		if_TruMark.bBitCmd := TRUE;
		iStep := 113;
	113:	// Wait for response
		IF NOT if_TruMark.bBusy AND NOT if_TruMark.Status.b3_Shutter_Open THEN
			iStep := 0;
		END_IF

	120:	// -------------------------------------------------------
			// BIT 2 - Laser Reset
			// -------------------------------------------------------
		if_TruMark.dwBitIn.2 := TRUE;
		if_TruMark.bBitCmd := TRUE;
		iStep := 121;
	121:	// Wait for response
		IF NOT if_TruMark.bBusy (*dj2101 AND if_TruMark.Status.b0_Laser_On AND if_TruMark.Status.b1_Laser_Ready*) THEN
			if_TruMark.dwBitIn.2 := FALSE; 	// deactivate reset function
			if_TruMark.bBitCmd := TRUE;	
			iStep := 0;
		END_IF

	130:	// -------------------------------------------------------
			// BIT 3 - Pilot Laser On
			// -------------------------------------------------------
		if_TruMark.dwBitIn.3 := TRUE;
		if_TruMark.bBitCmd := TRUE;
		iStep := 131;
	131:	// Wait for response
		IF NOT if_TruMark.bBusy AND if_TruMark.Status.b7_PilotLaser_On THEN
			iStep := 0;
		END_IF
		
	132:	// -------------------------------------------------------
			// BIT 3 - Pilot Laser OFF
			// -------------------------------------------------------
		if_TruMark.dwBitIn.3 := FALSE;
		if_TruMark.bBitCmd := TRUE;
		iStep := 133;
	133:	// Wait for response
		IF NOT if_TruMark.bBusy AND NOT if_TruMark.Status.b7_PilotLaser_On THEN
			iStep := 0;
		END_IF
		
	180:	// -------------------------------------------------------
			// BIT 8 - Cancel Marking Process
			// -------------------------------------------------------
		if_TruMark.dwBitIn.8 := TRUE;
		if_TruMark.bBitCmd := TRUE;
		iStep := 181;
	181:	// Wait for response
		IF NOT if_TruMark.bBusy AND NOT if_TruMark.Status.b15_Mark_Active THEN
			iStep := 0;
		END_IF

END_CASE]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>