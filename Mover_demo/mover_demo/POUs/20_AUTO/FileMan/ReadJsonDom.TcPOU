<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.6">
  <POU Name="ReadJsonDom" Id="{279571ce-db73-4cae-bbb0-df8c1ed5f757}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION ReadJsonDom : BOOL
VAR_INPUT
END_VAR
VAR
    fb_json : FB_JsonDomParser;

    json_head                   : SJsonValue;
    json_value                  : SJsonValue;
    json_iStationTimeDef1       : SJsonValue;
    json_iStationTimeDef2       : SJsonValue;
    json_recipeList             : SJsonValue;
    json_st110                  : SJsonValue;
    json_ST110_01Y              : SJsonValue;
    json_ST110_02Z              : SJsonValue;
    json_ST110_03Z              : SJsonValue;
    json_HorPnpAxis_config      : SJsonValue;
    json_defProfile             : SJsonValue;
    json_movesList              : SJsonValue;
    json_TriggerType            : SJsonValue;
    json_VerPnpAxisLeft_config  : SJsonValue;
    json_VerPnpAxisRight_config : SJsonValue;
    json_i                      : SJsonValue;
    json_ii                     : SJsonValue;

    i  : INT;
    ii : INT;

END_VAR
VAR_IN_OUT
    sMessage : STRING(10000);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[json_head := fb_json.ParseDocument(sMessage);

IF fb_json.HasMember(json_head, 'iStationTimeDef1') THEN
    json_iStationTimeDef1 := fb_json.FindMember(json_head, 'iStationTimeDef1');

    IF fb_json.IsArray(json_iStationTimeDef1) THEN
        FOR i := 0 TO MIN(TO_INT(fb_json.GetArraySize(json_iStationTimeDef1)) - 1, CONST.STATION_NUMBER - 1) BY 1 DO
            json_i                       := fb_json.GetArrayValueByIdx(json_iStationTimeDef1, TO_UDINT(i));
            PERS.iStationTimeDef1[i + 1] := TO_DINT(fb_json.GetInt(json_i));
        END_FOR
    END_IF
END_IF

IF fb_json.HasMember(json_head, 'iStationTimeDef2') THEN
    json_iStationTimeDef2 := fb_json.FindMember(json_head, 'iStationTimeDef2');

    IF fb_json.IsArray(json_iStationTimeDef2) THEN
        FOR i := 0 TO MIN(TO_INT(fb_json.GetArraySize(json_iStationTimeDef2)) - 1, CONST.STATION_NUMBER - 1) BY 1 DO
            json_i                       := fb_json.GetArrayValueByIdx(json_iStationTimeDef2, TO_UDINT(i));
            PERS.iStationTimeDef2[i + 1] := TO_DINT(fb_json.GetInt(json_i));
        END_FOR
    END_IF
END_IF

IF fb_json.HasMember(json_head, 'recipeList') THEN
    json_recipeList := fb_json.FindMember(json_head, 'recipeList');

    IF fb_json.IsArray(json_recipeList) THEN
        FOR i := 0 TO MIN(TO_INT(fb_json.GetArraySize(json_recipeList)) - 1, CONST.MAX_RECIPE_NUMBER - 1) BY 1 DO
            json_i := fb_json.GetArrayValueByIdx(json_recipeList, TO_UDINT(i));

            IF fb_json.HasMember(json_i, 'st110') THEN
                json_st110 := fb_json.FindMember(json_i, 'st110');

                IF fb_json.HasMember(json_st110, 'ST110_01Y') THEN
                    json_ST110_01Y := fb_json.FindMember(json_st110, 'ST110_01Y');

                    IF fb_json.HasMember(json_ST110_01Y, 'rPosGS') THEN
                        json_value                                    := fb_json.FindMember(json_ST110_01Y, 'rPosGS');
                        PERS.recipeList[i + 1].st110.ST110_01Y.rPosGS := TO_REAL(fb_json.GetDouble(json_value));
                    END_IF

                    IF fb_json.HasMember(json_ST110_01Y, 'rPosAS') THEN
                        json_value                                    := fb_json.FindMember(json_ST110_01Y, 'rPosAS');
                        PERS.recipeList[i + 1].st110.ST110_01Y.rPosAS := TO_REAL(fb_json.GetDouble(json_value));
                    END_IF

                    IF fb_json.HasMember(json_ST110_01Y, 'rVeloToAS') THEN
                        json_value := fb_json.FindMember(json_ST110_01Y, 'rVeloToAS');
                        PERS.recipeList[i + 1].st110.ST110_01Y.rVeloToAS
                            := TO_REAL(fb_json.GetDouble(json_value));
                    END_IF

                    IF fb_json.HasMember(json_ST110_01Y, 'rVeloToGS') THEN
                        json_value := fb_json.FindMember(json_ST110_01Y, 'rVeloToGS');
                        PERS.recipeList[i + 1].st110.ST110_01Y.rVeloToGS
                            := TO_REAL(fb_json.GetDouble(json_value));
                    END_IF

                    IF fb_json.HasMember(json_ST110_01Y, 'rAccel') THEN
                        json_value                                    := fb_json.FindMember(json_ST110_01Y, 'rAccel');
                        PERS.recipeList[i + 1].st110.ST110_01Y.rAccel := TO_REAL(fb_json.GetDouble(json_value));
                    END_IF

                    IF fb_json.HasMember(json_ST110_01Y, 'rDecel') THEN
                        json_value                                    := fb_json.FindMember(json_ST110_01Y, 'rDecel');
                        PERS.recipeList[i + 1].st110.ST110_01Y.rDecel := TO_REAL(fb_json.GetDouble(json_value));
                    END_IF

                    IF fb_json.HasMember(json_ST110_01Y, 'rJerk') THEN
                        json_value                                   := fb_json.FindMember(json_ST110_01Y, 'rJerk');
                        PERS.recipeList[i + 1].st110.ST110_01Y.rJerk := TO_REAL(fb_json.GetDouble(json_value));
                    END_IF
                END_IF

                IF fb_json.HasMember(json_st110, 'ST110_02Z') THEN
                    json_ST110_02Z := fb_json.FindMember(json_st110, 'ST110_02Z');

                    IF fb_json.HasMember(json_ST110_02Z, 'rPosGS') THEN
                        json_value                                    := fb_json.FindMember(json_ST110_02Z, 'rPosGS');
                        PERS.recipeList[i + 1].st110.ST110_02Z.rPosGS := TO_REAL(fb_json.GetDouble(json_value));
                    END_IF

                    IF fb_json.HasMember(json_ST110_02Z, 'rPosAS') THEN
                        json_value                                    := fb_json.FindMember(json_ST110_02Z, 'rPosAS');
                        PERS.recipeList[i + 1].st110.ST110_02Z.rPosAS := TO_REAL(fb_json.GetDouble(json_value));
                    END_IF

                    IF fb_json.HasMember(json_ST110_02Z, 'rVeloToAS') THEN
                        json_value := fb_json.FindMember(json_ST110_02Z, 'rVeloToAS');
                        PERS.recipeList[i + 1].st110.ST110_02Z.rVeloToAS
                            := TO_REAL(fb_json.GetDouble(json_value));
                    END_IF

                    IF fb_json.HasMember(json_ST110_02Z, 'rVeloToGS') THEN
                        json_value := fb_json.FindMember(json_ST110_02Z, 'rVeloToGS');
                        PERS.recipeList[i + 1].st110.ST110_02Z.rVeloToGS
                            := TO_REAL(fb_json.GetDouble(json_value));
                    END_IF

                    IF fb_json.HasMember(json_ST110_02Z, 'rAccel') THEN
                        json_value                                    := fb_json.FindMember(json_ST110_02Z, 'rAccel');
                        PERS.recipeList[i + 1].st110.ST110_02Z.rAccel := TO_REAL(fb_json.GetDouble(json_value));
                    END_IF

                    IF fb_json.HasMember(json_ST110_02Z, 'rDecel') THEN
                        json_value                                    := fb_json.FindMember(json_ST110_02Z, 'rDecel');
                        PERS.recipeList[i + 1].st110.ST110_02Z.rDecel := TO_REAL(fb_json.GetDouble(json_value));
                    END_IF

                    IF fb_json.HasMember(json_ST110_02Z, 'rJerk') THEN
                        json_value                                   := fb_json.FindMember(json_ST110_02Z, 'rJerk');
                        PERS.recipeList[i + 1].st110.ST110_02Z.rJerk := TO_REAL(fb_json.GetDouble(json_value));
                    END_IF
                END_IF

                IF fb_json.HasMember(json_st110, 'ST110_03Z') THEN
                    json_ST110_03Z := fb_json.FindMember(json_st110, 'ST110_03Z');

                    IF fb_json.HasMember(json_ST110_03Z, 'rPosGS') THEN
                        json_value                                    := fb_json.FindMember(json_ST110_03Z, 'rPosGS');
                        PERS.recipeList[i + 1].st110.ST110_03Z.rPosGS := TO_REAL(fb_json.GetDouble(json_value));
                    END_IF

                    IF fb_json.HasMember(json_ST110_03Z, 'rPosAS') THEN
                        json_value                                    := fb_json.FindMember(json_ST110_03Z, 'rPosAS');
                        PERS.recipeList[i + 1].st110.ST110_03Z.rPosAS := TO_REAL(fb_json.GetDouble(json_value));
                    END_IF

                    IF fb_json.HasMember(json_ST110_03Z, 'rVeloToAS') THEN
                        json_value := fb_json.FindMember(json_ST110_03Z, 'rVeloToAS');
                        PERS.recipeList[i + 1].st110.ST110_03Z.rVeloToAS
                            := TO_REAL(fb_json.GetDouble(json_value));
                    END_IF

                    IF fb_json.HasMember(json_ST110_03Z, 'rVeloToGS') THEN
                        json_value := fb_json.FindMember(json_ST110_03Z, 'rVeloToGS');
                        PERS.recipeList[i + 1].st110.ST110_03Z.rVeloToGS
                            := TO_REAL(fb_json.GetDouble(json_value));
                    END_IF

                    IF fb_json.HasMember(json_ST110_03Z, 'rAccel') THEN
                        json_value                                    := fb_json.FindMember(json_ST110_03Z, 'rAccel');
                        PERS.recipeList[i + 1].st110.ST110_03Z.rAccel := TO_REAL(fb_json.GetDouble(json_value));
                    END_IF

                    IF fb_json.HasMember(json_ST110_03Z, 'rDecel') THEN
                        json_value                                    := fb_json.FindMember(json_ST110_03Z, 'rDecel');
                        PERS.recipeList[i + 1].st110.ST110_03Z.rDecel := TO_REAL(fb_json.GetDouble(json_value));
                    END_IF

                    IF fb_json.HasMember(json_ST110_03Z, 'rJerk') THEN
                        json_value                                   := fb_json.FindMember(json_ST110_03Z, 'rJerk');
                        PERS.recipeList[i + 1].st110.ST110_03Z.rJerk := TO_REAL(fb_json.GetDouble(json_value));
                    END_IF
                END_IF

                IF fb_json.HasMember(json_st110, 'xUseVerticalLeft') THEN
                    json_value := fb_json.FindMember(json_st110, 'xUseVerticalLeft');
                    PERS.recipeList[i + 1].st110.xUseVerticalLeft
                        := TO_BOOL(fb_json.GetBool(json_value));
                END_IF

                IF fb_json.HasMember(json_st110, 'xUseVerticalRight') THEN
                    json_value := fb_json.FindMember(json_st110, 'xUseVerticalRight');
                    PERS.recipeList[i + 1].st110.xUseVerticalRight
                        := TO_BOOL(fb_json.GetBool(json_value));
                END_IF

                IF fb_json.HasMember(json_st110, 'HorPnpAxis_config') THEN
                    json_HorPnpAxis_config := fb_json.FindMember(json_st110, 'HorPnpAxis_config');

                    IF fb_json.HasMember(json_HorPnpAxis_config, 'defProfile') THEN
                        json_defProfile := fb_json.FindMember(json_HorPnpAxis_config, 'defProfile');

                        IF fb_json.HasMember(json_defProfile, 'lrVelocity') THEN
                            json_value := fb_json.FindMember(json_defProfile, 'lrVelocity');
                            PERS.recipeList[i + 1].st110.HorPnpAxis_config.defProfile.lrVelocity
                                := TO_LREAL(fb_json.GetDouble(json_value));
                        END_IF

                        IF fb_json.HasMember(json_defProfile, 'lrAccel') THEN
                            json_value := fb_json.FindMember(json_defProfile, 'lrAccel');
                            PERS.recipeList[i + 1].st110.HorPnpAxis_config.defProfile.lrAccel
                                := TO_LREAL(fb_json.GetDouble(json_value));
                        END_IF

                        IF fb_json.HasMember(json_defProfile, 'lrDecel') THEN
                            json_value := fb_json.FindMember(json_defProfile, 'lrDecel');
                            PERS.recipeList[i + 1].st110.HorPnpAxis_config.defProfile.lrDecel
                                := TO_LREAL(fb_json.GetDouble(json_value));
                        END_IF

                        IF fb_json.HasMember(json_defProfile, 'lrJerk') THEN
                            json_value := fb_json.FindMember(json_defProfile, 'lrJerk');
                            PERS.recipeList[i + 1].st110.HorPnpAxis_config.defProfile.lrJerk
                                := TO_LREAL(fb_json.GetDouble(json_value));
                        END_IF
                    END_IF

                    IF fb_json.HasMember(json_HorPnpAxis_config, 'moveNumber') THEN
                        json_value := fb_json.FindMember(json_HorPnpAxis_config, 'moveNumber');
                        PERS.recipeList[i + 1].st110.HorPnpAxis_config.moveNumber
                            := TO_INT(fb_json.GetInt(json_value));
                    END_IF

                    IF fb_json.HasMember(json_HorPnpAxis_config, 'movesList') THEN
                        json_movesList := fb_json.FindMember(json_HorPnpAxis_config, 'movesList');

                        IF fb_json.IsArray(json_movesList) THEN
                            FOR ii := 0 TO
                                MIN(TO_INT(fb_json.GetArraySize(json_movesList)) - 1, CONST.MAX_VECTOR_LIST - 0) BY 1
                                DO
                                json_ii := fb_json.GetArrayValueByIdx(json_movesList, TO_UDINT(ii));

                                IF fb_json.HasMember(json_ii, 'TriggerType') THEN
                                    json_value := fb_json.FindMember(json_ii, 'TriggerType');
                                    PERS.recipeList[i + 1].st110.HorPnpAxis_config.movesList[ii + 0].TriggerType
                                        := TO_INT(fb_json.GetInt(json_value));
                                END_IF

                                IF fb_json.HasMember(json_ii, 'TriggerPos') THEN
                                    json_value := fb_json.FindMember(json_ii, 'TriggerPos');
                                    PERS.recipeList[i + 1].st110.HorPnpAxis_config.movesList[ii + 0].TriggerPos
                                        := TO_LREAL(fb_json.GetDouble(json_value));
                                END_IF

                                IF fb_json.HasMember(json_ii, 'Timeout_ms') THEN
                                    json_value := fb_json.FindMember(json_ii, 'Timeout_ms');
                                    PERS.recipeList[i + 1].st110.HorPnpAxis_config.movesList[ii + 0].Timeout_ms
                                        := TO_DINT(fb_json.GetInt(json_value));
                                END_IF
                            END_FOR
                        END_IF
                    END_IF
                END_IF

                IF fb_json.HasMember(json_st110, 'VerPnpAxisLeft_config') THEN
                    json_VerPnpAxisLeft_config := fb_json.FindMember(json_st110, 'VerPnpAxisLeft_config');

                    IF fb_json.HasMember(json_VerPnpAxisLeft_config, 'defProfile') THEN
                        json_defProfile := fb_json.FindMember(json_VerPnpAxisLeft_config, 'defProfile');

                        IF fb_json.HasMember(json_defProfile, 'lrVelocity') THEN
                            json_value := fb_json.FindMember(json_defProfile, 'lrVelocity');
                            PERS.recipeList[i + 1].st110.VerPnpAxisLeft_config.defProfile.lrVelocity
                                := TO_LREAL(fb_json.GetDouble(json_value));
                        END_IF

                        IF fb_json.HasMember(json_defProfile, 'lrAccel') THEN
                            json_value := fb_json.FindMember(json_defProfile, 'lrAccel');
                            PERS.recipeList[i + 1].st110.VerPnpAxisLeft_config.defProfile.lrAccel
                                := TO_LREAL(fb_json.GetDouble(json_value));
                        END_IF

                        IF fb_json.HasMember(json_defProfile, 'lrDecel') THEN
                            json_value := fb_json.FindMember(json_defProfile, 'lrDecel');
                            PERS.recipeList[i + 1].st110.VerPnpAxisLeft_config.defProfile.lrDecel
                                := TO_LREAL(fb_json.GetDouble(json_value));
                        END_IF

                        IF fb_json.HasMember(json_defProfile, 'lrJerk') THEN
                            json_value := fb_json.FindMember(json_defProfile, 'lrJerk');
                            PERS.recipeList[i + 1].st110.VerPnpAxisLeft_config.defProfile.lrJerk
                                := TO_LREAL(fb_json.GetDouble(json_value));
                        END_IF
                    END_IF

                    IF fb_json.HasMember(json_VerPnpAxisLeft_config, 'moveNumber') THEN
                        json_value := fb_json.FindMember(json_VerPnpAxisLeft_config, 'moveNumber');
                        PERS.recipeList[i + 1].st110.VerPnpAxisLeft_config.moveNumber
                            := TO_INT(fb_json.GetInt(json_value));
                    END_IF

                    IF fb_json.HasMember(json_VerPnpAxisLeft_config, 'movesList') THEN
                        json_movesList := fb_json.FindMember(json_VerPnpAxisLeft_config, 'movesList');

                        IF fb_json.IsArray(json_movesList) THEN
                            FOR ii := 0 TO
                                MIN(TO_INT(fb_json.GetArraySize(json_movesList)) - 1, CONST.MAX_VECTOR_LIST - 0) BY 1
                                DO
                                json_ii := fb_json.GetArrayValueByIdx(json_movesList, TO_UDINT(ii));

                                IF fb_json.HasMember(json_ii, 'TriggerType') THEN
                                    json_value := fb_json.FindMember(json_ii, 'TriggerType');
                                    PERS.recipeList[i + 1].st110.VerPnpAxisLeft_config.movesList[ii + 0].TriggerType
                                        := TO_INT(fb_json.GetInt(json_value));
                                END_IF

                                IF fb_json.HasMember(json_ii, 'TriggerPos') THEN
                                    json_value := fb_json.FindMember(json_ii, 'TriggerPos');
                                    PERS.recipeList[i + 1].st110.VerPnpAxisLeft_config.movesList[ii + 0].TriggerPos
                                        := TO_LREAL(fb_json.GetDouble(json_value));
                                END_IF

                                IF fb_json.HasMember(json_ii, 'Timeout_ms') THEN
                                    json_value := fb_json.FindMember(json_ii, 'Timeout_ms');
                                    PERS.recipeList[i + 1].st110.VerPnpAxisLeft_config.movesList[ii + 0].Timeout_ms
                                        := TO_DINT(fb_json.GetInt(json_value));
                                END_IF
                            END_FOR
                        END_IF
                    END_IF
                END_IF

                IF fb_json.HasMember(json_st110, 'VerPnpAxisRight_config') THEN
                    json_VerPnpAxisRight_config := fb_json.FindMember(json_st110, 'VerPnpAxisRight_config');

                    IF fb_json.HasMember(json_VerPnpAxisRight_config, 'defProfile') THEN
                        json_defProfile := fb_json.FindMember(json_VerPnpAxisRight_config, 'defProfile');

                        IF fb_json.HasMember(json_defProfile, 'lrVelocity') THEN
                            json_value := fb_json.FindMember(json_defProfile, 'lrVelocity');
                            PERS.recipeList[i + 1].st110.VerPnpAxisRight_config.defProfile.lrVelocity
                                := TO_LREAL(fb_json.GetDouble(json_value));
                        END_IF

                        IF fb_json.HasMember(json_defProfile, 'lrAccel') THEN
                            json_value := fb_json.FindMember(json_defProfile, 'lrAccel');
                            PERS.recipeList[i + 1].st110.VerPnpAxisRight_config.defProfile.lrAccel
                                := TO_LREAL(fb_json.GetDouble(json_value));
                        END_IF

                        IF fb_json.HasMember(json_defProfile, 'lrDecel') THEN
                            json_value := fb_json.FindMember(json_defProfile, 'lrDecel');
                            PERS.recipeList[i + 1].st110.VerPnpAxisRight_config.defProfile.lrDecel
                                := TO_LREAL(fb_json.GetDouble(json_value));
                        END_IF

                        IF fb_json.HasMember(json_defProfile, 'lrJerk') THEN
                            json_value := fb_json.FindMember(json_defProfile, 'lrJerk');
                            PERS.recipeList[i + 1].st110.VerPnpAxisRight_config.defProfile.lrJerk
                                := TO_LREAL(fb_json.GetDouble(json_value));
                        END_IF
                    END_IF

                    IF fb_json.HasMember(json_VerPnpAxisRight_config, 'moveNumber') THEN
                        json_value := fb_json.FindMember(json_VerPnpAxisRight_config, 'moveNumber');
                        PERS.recipeList[i + 1].st110.VerPnpAxisRight_config.moveNumber
                            := TO_INT(fb_json.GetInt(json_value));
                    END_IF

                    IF fb_json.HasMember(json_VerPnpAxisRight_config, 'movesList') THEN
                        json_movesList := fb_json.FindMember(json_VerPnpAxisRight_config, 'movesList');

                        IF fb_json.IsArray(json_movesList) THEN
                            FOR ii := 0 TO
                                MIN(TO_INT(fb_json.GetArraySize(json_movesList)) - 1, CONST.MAX_VECTOR_LIST - 0) BY 1
                                DO
                                json_ii := fb_json.GetArrayValueByIdx(json_movesList, TO_UDINT(ii));

                                IF fb_json.HasMember(json_ii, 'TriggerType') THEN
                                    json_value := fb_json.FindMember(json_ii, 'TriggerType');
                                    PERS.recipeList[i + 1].st110.VerPnpAxisRight_config.movesList[ii + 0].TriggerType
                                        := TO_INT(fb_json.GetInt(json_value));
                                END_IF

                                IF fb_json.HasMember(json_ii, 'TriggerPos') THEN
                                    json_value := fb_json.FindMember(json_ii, 'TriggerPos');
                                    PERS.recipeList[i + 1].st110.VerPnpAxisRight_config.movesList[ii + 0].TriggerPos
                                        := TO_LREAL(fb_json.GetDouble(json_value));
                                END_IF

                                IF fb_json.HasMember(json_ii, 'Timeout_ms') THEN
                                    json_value := fb_json.FindMember(json_ii, 'Timeout_ms');
                                    PERS.recipeList[i + 1].st110.VerPnpAxisRight_config.movesList[ii + 0].Timeout_ms
                                        := TO_DINT(fb_json.GetInt(json_value));
                                END_IF
                            END_FOR
                        END_IF
                    END_IF
                END_IF
            END_IF
        END_FOR
    END_IF
END_IF
]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>