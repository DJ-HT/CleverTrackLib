<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.6">
  <POU Name="_14_STATE" Id="{c95d7638-51ff-4919-9f91-365eb2425efb}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM _14_STATE
(****************************************************************************)
//STATE PROGRAMM
//	- Control Buttons
//	- Status Anlage
//
//	05.09.2019/Dj
//
//	Version:
(****************************************************************************)
VAR
    fb_State        :   FB_State;       //Status der Maschine
	sStateDbg		: STRING;		// enState but in string format
		
	//Control Buttons
	_FB_btAUTO	: FB_BUTTON;
	_FB_btSTEP	: FB_BUTTON;
	_FB_btEND	: FB_BUTTON;
	_FB_btMANU	: FB_BUTTON;
	_FB_btINIT	: FB_BUTTON;
	_FB_btSTOP	: FB_BUTTON;
	_FB_btLEER	: FB_BUTTON;
	_FB_btQUIT	: FB_BUTTON;
	_FB_btSTART	: FB_BUTTON;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[//****************************************************************************
// 	CONTROL BUTTONS
//****************************************************************************
//	AUTO 
_FB_btAUTO(pbtIN := ADR(HMI.btArMain[0]),
           xINdis := (HMI.enState < enState.StateREADY),
           xINon := (HMI.enState = enState.StateAUTO),
           xINerr := FALSE);

//STEP
_FB_btSTEP(pbtIN := ADR(HMI.btArMain[1]),
           xINdis := (HMI.enState < enState.StateREADY),
           xINon := (HMI.enState = enState.StateSTEP),
           xINerr := FALSE);

//END
_FB_btEND(pbtIN := ADR(HMI.btArMain[2]),
          xINdis := (HMI.enState < enState.StateREADY),
          xINon := (HMI.enState = enState.StateEND),
          xINerr := FALSE);

//MANU
_FB_btMANU(pbtIN := ADR(HMI.btArMain[3]),
           xINdis := (HMI.enState > enState.StateSTEP) OR (HMI.enState = enState.StateALARM) OR (HMI.enState < enState.StateAIRon),
           xINon := (HMI.enState = enState.StateMANU),
           xINerr := FALSE);

//INIT
_FB_btINIT(pbtIN := ADR(HMI.btArMain[4]),
           xINdis := (HMI.enState < enState.StateENGIZED),
           xINon := (HMI.enState = enState.StateINIT),
           xINerr := FALSE);

//STOP
_FB_btSTOP(pbtIN := ADR(HMI.btArMain[5]),
           xINdis := (HMI.enState < enState.StateENGIZED),
           xINon := FALSE,
           xINerr := FALSE);

//LEERFAHREN
_FB_btLEER(pbtIN := ADR(HMI.btArMain[6]),
           xINdis := FALSE,
           xINon := FALSE,
           xINerr := FALSE);

//QUIT
_FB_btQUIT(pbtIN := ADR(HMI.btArMain[7]),
           xINdis := FALSE,
           xINon := FALSE,
           xINerr := HMI.xAlarm);

//START
_FB_btSTART(pbtIN := ADR(HMI.btArMain[9]),
           xINdis := HMI.enState < enState.StateREADY,
           xINon := HMI.btArMain[9].on,
           xINerr := FALSE);

//****************************************************************************
// 	STATE FB
//****************************************************************************
fb_State(xIN_AutoInit := TRUE,
         xIN_DoRef := FALSE,
         xIN_ENERGIE := TRUE,
         xIN_AIR := HMI.xAIRon,
         xIN_EINRICHTEN :=,
         xIN_AUTO := HMI.btArMain[0].rtrig,
         xIN_STEP := HMI.btArMain[1].rtrig,
         xIN_CYCLE := HMI.btArMain[2].rtrig,
         xIN_MANU := HMI.btArMain[3].rtrig,
         xIN_INIT := HMI.btArMain[4].rtrig,
         xIN_STOP := HMI.btArMain[5].rtrig,
         xIN_LEER := HMI.btArMain[6].rtrig,
         xIN_InitEND := (GVL._Process1.xOUT_InitDone OR NOT GVL._Process1.xIN_On),
         xIN_ALARM := (GVL._Process1.xOUT_AlarmST) AND
                      (GVL._Process1.xOUT_ErrFlag OR GVL._Process1.xOUT_Wait OR NOT GVL._Process1.xIN_On),
         xIN_LastDone := (GVL._Process1.xOUT_Done OR NOT GVL._Process1.xIN_On),
         xIN_WaitFBs := (GVL._Process1.xOUT_Wait OR NOT GVL._Process1.xIN_On),
         enINOUT_State := HMI.enState);

sStateDbg := TO_STRING(HMI.enState);
]]></ST>
    </Implementation>
    <LineIds Name="_14_STATE">
      <LineId Id="444" Count="79" />
      <LineId Id="413" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>