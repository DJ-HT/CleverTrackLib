<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.6">
  <GVL Name="AXIS" Id="{dceb5ac4-c0b9-49d4-9a4e-e676386f04ad}">
    <Declaration><![CDATA[{attribute 'qualified_only'}
(*******************************************************************)
(* ACHSEN KONSTANTEN *)
(*******************************************************************)
VAR_GLOBAL CONSTANT	
	(**************************)			//		#TEACHNUMMER
	(* ST101				  *)
	(**************************)
	//Axis101X05 P&P Horz (LINMOT)					#11
	POSMIN_Axis101X05: REAL := 5;
	POSMAX_Axis101X05: REAL := 410;
	VELOMAX_Axis101X05: REAL := 750;
	VELOMANU_Axis101X05: REAL := 30;
	//Axis101Z06 P&P VERT (LINMOT)					#12
	POSMIN_Axis101Z06: REAL := 5;
	POSMAX_Axis101Z06: REAL := 410;
	VELOMAX_Axis101Z06: REAL := 750;
	VELOMANU_Axis101Z06: REAL := 30;
	//Axis101D07 DREHNEST VEREINZELUNG (LINMOT DM)	#13
	VELOMAX_Axis101D07: REAL := 750;
	VELOMANU_Axis101D07: REAL := 30;
	
	(**************************)
	(* ST102-1				  *)
	(**************************)
	//Axis102Y10 DOSIEREN HORZ (AX)					#20	
	POSMIN_Axis102Y10: REAL := 5;
	POSMAX_Axis102Y10: REAL := 410;
	VELOMAX_Axis102Y10: REAL := 750;
	VELOMANU_Axis102Y10: REAL := 30;
	//Axis102D11 DREHEN PROPELLER (EL)				#21
	VELOMAX_Axis102D11: REAL := 750;
	VELOMANU_Axis102D11: REAL := 30;
	//Axis102X12 COPERION HORIZONTAL 102-1/2 (AX)	#22
	POSMIN_Axis102X12: REAL := 5;
	POSMAX_Axis102X12: REAL := 410;
	VELOMAX_Axis102X12: REAL := 750;
	VELOMANU_Axis102X12: REAL := 30;
	//Axis102Y14 P&P HORZ (LINMOT)					#24
	POSMIN_Axis102Y14: REAL := 5;
	POSMAX_Axis102Y14: REAL := 410;
	VELOMAX_Axis102Y14: REAL := 750;
	VELOMANU_Axis102Y14: REAL := 30;
	//Axis102Z15 P&P VERT (LINMOT)					#25
	POSMIN_Axis102Z15: REAL := 5;
	POSMAX_Axis102Z15: REAL := 410;
	VELOMAX_Axis102Z15: REAL := 750;
	VELOMANU_Axis102Z15: REAL := 30;
	//Axis102Z16 EINDRÜCKEN1 (SMC)					#26
	POSMIN_Axis102Z16: REAL := 0;
	POSMAX_Axis102Z16: REAL := 30;
	VELOMAX_Axis102Z16: REAL := 250;	//85% =max
	VELOMANU_Axis102Z16: REAL := 50;	//35% =min
	//Axis102Z17 EINDRÜCKEN2 (SMC)					#27
	POSMIN_Axis102Z17: REAL := 0;	
	POSMAX_Axis102Z17: REAL := 30;
	VELOMAX_Axis102Z17: REAL := 250;	//85% =max
	VELOMANU_Axis102Z17: REAL := 50;	//35% =min
	//Axis102Z18 EINDRÜCKEN3 (SMC)					#28
	POSMIN_Axis102Z18: REAL := 0;
	POSMAX_Axis102Z18: REAL := 30;
	VELOMAX_Axis102Z18: REAL := 250;	//85% =max
	VELOMANU_Axis102Z18: REAL := 50;	//35% =min
	//Axis102Z19 EINDRÜCKEN4 (SMC)					#29
	POSMIN_Axis102Z19: REAL := 0;
	POSMAX_Axis102Z19: REAL := 30;
	VELOMAX_Axis102Z19: REAL := 250;	//85% =max
	VELOMANU_Axis102Z19: REAL := 50;	//35% =min
	
	(**************************)
	(* ST102-2				  *)
	(**************************)
	//Axis102Y40 DOSIEREN HORZ (AX)					#30
	POSMIN_Axis102Y40: REAL := 5;
	POSMAX_Axis102Y40: REAL := 410;
	VELOMAX_Axis102Y40: REAL := 750;
	VELOMANU_Axis102Y40: REAL := 30;
	//Axis102D41 DREHEN PROPELLER (EL)				#31	
	VELOMAX_Axis102D41: REAL := 750;
	VELOMANU_Axis102D41: REAL := 30;
	//Axis102Y44 P&P HORZ (LINMOT)					#34
	POSMIN_Axis102Y44: REAL := 5;
	POSMAX_Axis102Y44: REAL := 410;
	VELOMAX_Axis102Y44: REAL := 750;
	VELOMANU_Axis102Y44: REAL := 30;
	//Axis102Z45 P&P VERT (LINMOT)					#35
	POSMIN_Axis102Z45: REAL := 5;
	POSMAX_Axis102Z45: REAL := 410;
	VELOMAX_Axis102Z45: REAL := 750;
	VELOMANU_Axis102Z45: REAL := 30;
	//Axis102Z46 EINDRÜCKEN1 (SMC)					#36
	POSMIN_Axis102Z46: REAL := 0;
	POSMAX_Axis102Z46: REAL := 30;
	VELOMAX_Axis102Z46: REAL := 250;	//85% =max
	VELOMANU_Axis102Z46: REAL := 50;	//35% =min
	//Axis102Z47 EINDRÜCKEN2 (SMC)					#37
	POSMIN_Axis102Z47: REAL := 0;
	POSMAX_Axis102Z47: REAL := 30;
	VELOMAX_Axis102Z47: REAL := 250;	//85% =max
	VELOMANU_Axis102Z47: REAL := 50;	//35% =min
	//Axis102Z48 EINDRÜCKEN3 (SMC)					#38
	POSMIN_Axis102Z48: REAL := 0;
	POSMAX_Axis102Z48: REAL := 30;
	VELOMAX_Axis102Z48: REAL := 250;	//85% =max
	VELOMANU_Axis102Z48: REAL := 50;	//35% =min
	//Axis102Z49 EINDRÜCKEN4 (SMC)					#39
	POSMIN_Axis102Z49: REAL := 0;
	POSMAX_Axis102Z49: REAL := 30;
	VELOMAX_Axis102Z49: REAL := 250;	//85% =max
	VELOMANU_Axis102Z49: REAL := 50;	//35% =min
	
	(**************************)
	(* ST106				  *)
	(**************************)
	//Axis106Z10 P&P HORZ (LINMOT)					#60
	POSMIN_Axis106Z10: REAL := 5;
	POSMAX_Axis106Z10: REAL := 410;
	VELOMAX_Axis106Z10: REAL := 750;
	VELOMANU_Axis106Z10: REAL := 30;
	//Axis106D11 P&P TURN (LINMOT)					#61
	POSMIN_Axis106D11: REAL := 0;
	POSMAX_Axis106D11: REAL := 360;
	VELOMAX_Axis106D11: REAL := 750;
	VELOMANU_Axis106D11: REAL := 30;
	
	(**************************)
	(* ST108				  *)
	(**************************)
	//Axis108Y05 P&P Horz (LINMOT)					#85
	POSMIN_Axis108Y05: REAL := 5;
	POSMAX_Axis108Y05: REAL := 410;
	VELOMAX_Axis108Y05: REAL := 750;
	VELOMANU_Axis108Y05: REAL := 30;
	//Axis108Z06 P&P VERT (LINMOT)					#86
	POSMIN_Axis108Z06: REAL := 5;
	POSMAX_Axis108Z06: REAL := 410;
	VELOMAX_Axis108Z06: REAL := 750;
	VELOMANU_Axis108Z06: REAL := 30;
	//Axis108D07 DREHNEST VEREINZELUNG (LINMOT DM)	#87
	VELOMAX_Axis108D07: REAL := 750;
	VELOMANU_Axis108D07: REAL := 30;
	
	(**************************)
	(* ST109				  *)
	(**************************)
	//Axis109Y10 P&P Horz (LINMOT)					#90
	POSMIN_Axis109Y10: REAL := 5;
	POSMAX_Axis109Y10: REAL := 410;
	VELOMAX_Axis109Y10: REAL := 750;
	VELOMANU_Axis109Y10: REAL := 30;
	//Axis109Z11 P&P VERT (LINMOT)					#91
	POSMIN_Axis109Z11: REAL := 5;
	POSMAX_Axis109Z11: REAL := 410;
	VELOMAX_Axis109Z11: REAL := 750;
	VELOMANU_Axis109Z11: REAL := 30;
	
	(**************************)
	(* ST120 TAKTBAND         *)
	(**************************)
	//Axis120Z10 HUB TAKTKETTE (AX)					#120
	POSMIN_Axis120Z10: REAL := 5;
	POSMAX_Axis120Z10: REAL := 410;
	VELOMAX_Axis120Z10: REAL := 100;
	VELOMANU_Axis120Z10: REAL := 30;
	//Axis120X11 TAKTKETTE (AX)						#121
	VELOMAX_Axis120X11: REAL := 750;
	VELOMANU_Axis120X11: REAL := 30;
	
END_VAR
VAR_GLOBAL
(*******************************************************************)
(* ACHSEN Variablen *)
(*******************************************************************)
	//Axis Allgemein Teachen und Anzeige
	bTeachAxisNr	:	BYTE;		// Zu Teachende Achse # (von HMI)
	bTeachInPos		:	BYTE;		// Achse in Position (Teachpos (99= nicht in Pos))
	bTeachPos 		:	BYTE;		// Achse Teach Position (Anzufahrende Position #)
	rTeachIncAxis	:	REAL;		// Axis Inching Wert
	rTeachVelo		:	REAL;		// Achse Geschwindigkeit (Anzeige)
	rTeachPos 		:	REAL;		// Achse Teach Position (Anzufahrende Position Wert)
	rTeachActPos 	:	REAL;		// Achse AKTUELLE Position (AKTUEL
	rTeachPosMin	:	REAL;		// Achse PositionsminimumLER Position Wert)
	rTeachPosMax	:	REAL;		// Achse Positionsmaximum
	
	btTeachArAxis	: 	ARRAY[0..8] OF structButton; (* Buttons AXIS
                                                    0: Disable 
                                                    1: Inching 
                                                    2: Slow 
                                                    3: Fast 
                                                    4: Move Abs/Rel   
                                                    5: Manu Move NEGATIVE
                                                    6: Manu Move POSITIVE  
													7: Start Homing 
													8: Teachpos Übernehmen*)
													
	//--------------------------------------------------------------------------
	//Axis101X05 -> Station01 X-Achse Achse #11
	Axis101X05		:	AXIS_REF;	// Referenz Axis
	rActPos101X05		:	REAL;		// Aktuelle Position
	bInPos101X05		:	BYTE;		// Achse in Position  (99= nicht in Pos)
	bAxisCtrHi101X05	AT%Q*	:	BYTE;		// Achse Controlwort Hi-Byte
	wAxisState101X05	AT%I*	:	WORD;		//Achse Statusword
	//--------------------------------------------------------------------------
	//Axis101Z06 -> Station01 Z-Achse Achse #12
	Axis101Z06		:	AXIS_REF;	// Referenz Axis
	rActPos101Z06		:	REAL;		// Aktuelle Position
	bInPos101Z06		:	BYTE;		// Achse in Position  (99= nicht in Pos)
	xOben101Z06			:	BOOL;		// Z- Achse Oben in Sicherer Position
	bAxisCtrHi101Z06	AT%Q*	:	BYTE;		// Achse Controlwort Hi-Byte
	wAxisState101Z06	AT%I*	:	WORD;		//Achse Statusword
	//--------------------------------------------------------------------------
	//Axis101D07 -> Station01 D-Achse Achse #13
	Axis101D07		:	AXIS_REF;	// Referenz Axis
	rActPos101D07		:	REAL;		// Aktuelle Position
	bInPos101D07		:	BYTE;		// Achse in Position  (99= nicht in Pos)
	bAxisCtrHi101D07	AT%Q*	:	BYTE;		// Achse Controlwort Hi-Byte
	wAxisState101D07	AT%I*	:	WORD;		//Achse Statusword
	//--------------------------------------------------------------------------
	//Axis102Y10 -> Station02 Y-Achse Achse #20
	Axis102Y10		:	AXIS_REF;	// Referenz Axis
	rActPos102Y10		:	REAL;		// Aktuelle Position
	bInPos102Y10		:	BYTE;		// Achse in Position  (99= nicht in Pos)
	//--------------------------------------------------------------------------
	//Axis102D11 -> Station02 D-Achse Achse #21
	Axis102D11		:	AXIS_REF;	// Referenz Axis
	rActPos102D11		:	REAL;		// Aktuelle Position
	bInPos102D11		:	BYTE;		// Achse in Position  (99= nicht in Pos)
	//--------------------------------------------------------------------------
	//Axis102X12 -> Station02 X-Achse Achse #22
	Axis102X12		:	AXIS_REF;	// Referenz Axis 
	rActPos102X12		:	REAL;		// Aktuelle Position
	bInPos102X12		:	BYTE;		// Achse in Position  (99= nicht in Pos)
	//--------------------------------------------------------------------------
	//Axis102Y14 -> Station02 Y-Achse Achse #24
	Axis102Y14		:	AXIS_REF;	// Referenz Axis 
	rActPos102Y14		:	REAL;		// Aktuelle Position
	bInPos102Y14		:	BYTE;		// Achse in Position  (99= nicht in Pos)
	bAxisCtrHi102Y14	AT%Q*	:	BYTE;		// Achse Controlwort Hi-Byte
	wAxisState102Y14	AT%I*	:	WORD;		//Achse Statusword
	//--------------------------------------------------------------------------
	//Axis102Z15 -> Station02 Z-Achse Achse #25
	Axis102Z15		:	AXIS_REF;	// Referenz Axis 
	rActPos102Z15		:	REAL;		// Aktuelle Position
	bInPos102Z15		:	BYTE;		// Achse in Position  (99= nicht in Pos)
	xOben102Z15			:	BOOL;		// Z- Achse Oben in Sicherer Position
	bAxisCtrHi102Z15	AT%Q*	:	BYTE;		// Achse Controlwort Hi-Byte
	wAxisState102Z15	AT%I*	:	WORD;		//Achse Statusword
	//--------------------------------------------------------------------------
	//Axis102Z16 -> Station02 Z-Achse Achse #26 
	rActPos102Z16		:	REAL;		// Aktuelle Position
	bInPos102Z16		:	BYTE;		// Achse in Position  (99= nicht in Pos)
	typeOUT_Axis102Z16	AT%Q*	: typeOutputArea; 	//Achsreferenz SMC
	typeIN_Axis102Z16	AT%I*	: typeInputArea;	//Achsreferenz SMC
	//--------------------------------------------------------------------------
	//Axis102Z17 -> Station02 Z-Achse Achse #27
	rActPos102Z17		:	REAL;		// Aktuelle Position
	bInPos102Z17		:	BYTE;		// Achse in Position  (99= nicht in Pos)
	typeOUT_Axis102Z17	AT%Q*	: typeOutputArea;	//Achsreferenz SMC
	typeIN_Axis102Z17	AT%I*	: typeInputArea;	//Achsreferenz SMC
	//--------------------------------------------------------------------------
	//Axis102Z18 -> Station02 Z-Achse Achse #28
	rActPos102Z18		:	REAL;		// Aktuelle Position
	bInPos102Z18		:	BYTE;		// Achse in Position  (99= nicht in Pos)
	typeOUT_Axis102Z18	AT%Q*	: typeOutputArea;	//Achsreferenz SMC
	typeIN_Axis102Z18	AT%I*	: typeInputArea;	//Achsreferenz SMC
	//--------------------------------------------------------------------------
	//Axis102Z19 -> Station02 Z-Achse Achse #29
	rActPos102Z19		:	REAL;		// Aktuelle Position
	bInPos102Z19		:	BYTE;		// Achse in Position  (99= nicht in Pos)
	typeOUT_Axis102Z19	AT%Q*	: typeOutputArea;	//Achsreferenz SMC
	typeIN_Axis102Z19	AT%I*	: typeInputArea;	//Achsreferenz SMC
	//--------------------------------------------------------------------------
	//Axis102Y40 -> Station02 Y-Achse Achse #30
	Axis102Y40		:	AXIS_REF;	// Referenz Axis 
	rActPos102Y40		:	REAL;		// Aktuelle Position
	bInPos102Y40		:	BYTE;		// Achse in Position  (99= nicht in Pos)
	//--------------------------------------------------------------------------
	//Axis102D41 -> Station02 Z-Achse Achse #31
	Axis102D41		:	AXIS_REF;	// Referenz Axis 
	rActPos102D41		:	REAL;		// Aktuelle Position
	bInPos102D41		:	BYTE;		// Achse in Position  (99= nicht in Pos)
	//--------------------------------------------------------------------------
	//Axis102Y44 -> Station02 Z-Achse Achse #34
	Axis102Y44		:	AXIS_REF;	// Referenz Axis 
	rActPos102Y44		:	REAL;		// Aktuelle Position
	bInPos102Y44		:	BYTE;		// Achse in Position  (99= nicht in Pos)
	bAxisCtrHi102Y44	AT%Q*	:	BYTE;		// Achse Controlwort Hi-Byte
	wAxisState102Y44	AT%I*	:	WORD;		//Achse Statusword
	//--------------------------------------------------------------------------
	//Axis102Z45 -> Station02 Z-Achse Achse #35
	Axis102Z45		:	AXIS_REF;	// Referenz Axis 
	rActPos102Z45		:	REAL;		// Aktuelle Position
	bInPos102Z45		:	BYTE;		// Achse in Position  (99= nicht in Pos)
	xOben102Z45			:	BOOL;		// Z- Achse Oben in Sicherer Position
	bAxisCtrHi102Z45	AT%Q*	:	BYTE;		// Achse Controlwort Hi-Byte
	wAxisState102Z45	AT%I*	:	WORD;		//Achse Statusword
	//--------------------------------------------------------------------------
	//Axis102Z46 -> Station02 Z-Achse Achse #36
	rActPos102Z46		:	REAL;		// Aktuelle Position
	bInPos102Z46		:	BYTE;		// Achse in Position  (99= nicht in Pos)
	typeOUT_Axis102Z46	AT%Q*	: typeOutputArea;	//Achsreferenz SMC
	typeIN_Axis102Z46	AT%I*	: typeInputArea;	//Achsreferenz SMC
	//--------------------------------------------------------------------------
	//Axis102Z47 -> Station02 Z-Achse Achse #37
	rActPos102Z47		:	REAL;		// Aktuelle Position
	bInPos102Z47		:	BYTE;		// Achse in Position  (99= nicht in Pos)
	typeOUT_Axis102Z47	AT%Q*	: typeOutputArea;	//Achsreferenz SMC
	typeIN_Axis102Z47	AT%I*	: typeInputArea;	//Achsreferenz SMC
	//--------------------------------------------------------------------------
	//Axis102Z48 -> Station02 Z-Achse Achse #38
	rActPos102Z48		:	REAL;		// Aktuelle Position
	bInPos102Z48		:	BYTE;		// Achse in Position  (99= nicht in Pos)
	typeOUT_Axis102Z48	AT%Q*	: typeOutputArea;	//Achsreferenz SMC
	typeIN_Axis102Z48	AT%I*	: typeInputArea;	//Achsreferenz SMC
	//--------------------------------------------------------------------------
	//Axis102Z49 -> Station02 Z-Achse Achse #39
	rActPos102Z49		:	REAL;		// Aktuelle Position
	bInPos102Z49		:	BYTE;		// Achse in Position  (99= nicht in Pos)
	typeOUT_Axis102Z49	AT%Q*	: typeOutputArea;	//Achsreferenz SMC
	typeIN_Axis102Z49	AT%I*	: typeInputArea;	//Achsreferenz SMC
	//--------------------------------------------------------------------------
	//Axis106Z10 -> Station02 Z-Achse Achse #60
	Axis106Z10		:	AXIS_REF;	// Referenz Axis 
	rActPos106Z10		:	REAL;		// Aktuelle Position
	bInPos106Z10		:	BYTE;		// Achse in Position  (99= nicht in Pos)
	xOben106Z10			:	BOOL;		// Z- Achse Oben in Sicherer Position
	bAxisCtrHi106Z10	AT%Q*	:	BYTE;		// Achse Controlwort Hi-Byte
	wAxisState106Z10	AT%I*	:	WORD;		//Achse Statusword
	//--------------------------------------------------------------------------
	//Axis106D11 -> Station02 D-Achse Achse #61
	Axis106D11		:	AXIS_REF;	// Referenz Axis 
	rActPos106D11		:	REAL;		// Aktuelle Position
	bInPos106D11		:	BYTE;		// Achse in Position  (99= nicht in Pos)
	bAxisCtrHi106D11	AT%Q*	:	BYTE;		// Achse Controlwort Hi-Byte
	wAxisState106D11	AT%I*	:	WORD;		//Achse Statusword
	//--------------------------------------------------------------------------
	//Axis108Y05 -> Station02 Y-Achse Achse #85
	Axis108Y05		:	AXIS_REF;	// Referenz Axis 
	rActPos108Y05		:	REAL;		// Aktuelle Position
	bInPos108Y05		:	BYTE;		// Achse in Position  (99= nicht in Pos)
	bAxisCtrHi108Y05	AT%Q*	:	BYTE;		// Achse Controlwort Hi-Byte
	wAxisState108Y05	AT%I*	:	WORD;		//Achse Statusword
	//--------------------------------------------------------------------------
	//Axis108Z06 -> Station02 Z-Achse Achse #86
	Axis108Z06		:	AXIS_REF;	// Referenz Axis 
	rActPos108Z06		:	REAL;		// Aktuelle Position
	bInPos108Z06		:	BYTE;		// Achse in Position  (99= nicht in Pos)
	xOben108Z06			:	BOOL;		// Z- Achse Oben in Sicherer Position
	bAxisCtrHi108Z06	AT%Q*	:	BYTE;		// Achse Controlwort Hi-Byte
	wAxisState108Z06	AT%I*	:	WORD;		//Achse Statusword
	//--------------------------------------------------------------------------
	//Axis108D07 -> Station02 D-Achse Achse #87
	Axis108D07		:	AXIS_REF;	// Referenz Axis 
	rActPos108D07		:	REAL;		// Aktuelle Position
	bInPos108D07		:	BYTE;		// Achse in Position  (99= nicht in Pos)
	bAxisCtrHi108D07	AT%Q*	:	BYTE;		// Achse Controlwort Hi-Byte
	wAxisState108D07	AT%I*	:	WORD;		//Achse Statusword
	//--------------------------------------------------------------------------
	//Axis109Y10 -> Station02 Y-Achse Achse #90
	Axis109Y10		:	AXIS_REF;	// Referenz Axis 
	rActPos109Y10		:	REAL;		// Aktuelle Position
	bInPos109Y10		:	BYTE;		// Achse in Position  (99= nicht in Pos)
	bAxisCtrHi109Y10	AT%Q*	:	BYTE;		// Achse Controlwort Hi-Byte
	wAxisState109Y10	AT%I*	:	WORD;		//Achse Statusword
	//--------------------------------------------------------------------------
	//Axis109Z11 -> Station02 Z-Achse Achse #91
	Axis109Z11		:	AXIS_REF;	// Referenz Axis 
	rActPos109Z11		:	REAL;		// Aktuelle Position
	bInPos109Z11		:	BYTE;		// Achse in Position  (99= nicht in Pos)
	xOben109Z11			:	BOOL;		// Z- Achse Oben in Sicherer Position
	bAxisCtrHi109Z11	AT%Q*	:	BYTE;		// Achse Controlwort Hi-Byte
	wAxisState109Z11	AT%I*	:	WORD;		//Achse Statusword
	//--------------------------------------------------------------------------
	//Axis120Z10 -> Station02 Z-Achse Achse #120
	Axis120Z10		:	AXIS_REF;	// Referenz Axis 
	rActPos120Z10		:	REAL;		// Aktuelle Position
	bInPos120Z10		:	BYTE;		// Achse in Position  (99= nicht in Pos)
	//--------------------------------------------------------------------------
	//Axis120X11 -> Station02 X-Achse Achse #121
	Axis120X11		:	AXIS_REF;	// Referenz Axis 
	rActPos120X11		:	REAL;		// Aktuelle Position
	bInPos120X11		:	BYTE;		// Achse in Position  (99= nicht in Pos)
	
END_VAR

(*******************************************************************)
(* ACHSEN Positionen von HMI*)
(*******************************************************************)	
VAR_GLOBAL RETAIN
	//--------------------------------------------------------------------------
	//Axis101X05
	rArAxisPos101X05	:	ARRAY[0..10] OF REAL;	(*	0: REFERENZ
													1: ST101A RUNDTISCH ENTNAHME
													2: ST102-1 
													3: ST102-2
													
													9: NIO
												*)
	rAxisVelo101X05	:	REAL;					//VELOCITY
	//--------------------------------------------------------------------------
	//Axis101Z06
	rArAxisPos101Z06	:	ARRAY[0..10] OF REAL;	(*	
													0: OBEN
													1: ST101A RUNDTISCH ENTNAHME
													2: ST102-1 
													3: ST102-2
													4: NIO
												*)
	rAxisVelo101Z06	:	REAL;					//VELOCITY
	//--------------------------------------------------------------------------
	//Axis101D07
	rArAxisPos101D07	:	ARRAY[0..10] OF REAL;	(*	
													0: REFERENZ - ÜBERGABE ST101B
													1: NEST#3  45°
													2: NEST#1 135°
													3: NEST#2 225°
													4: NEST#4 315°
												*)
	rAxisVelo101D07	:	REAL;					//VELOCITY
	//--------------------------------------------------------------------------
	//Axis102Y10
	rArAxisPos102Y10	:	ARRAY[0..10] OF REAL;	(*	0: LEEREN HINTEN
													1: EINDRÜCKEN
													2: UMSETZTEN / FÜLLEN
												*)
	rAxisVelo102Y10	:	REAL;					//VELOCITY
	//--------------------------------------------------------------------------
	//Axis102D11
	rArAxisPos102D11	:	ARRAY[0..10] OF REAL;	(*	0: REFERENZ
													1: 
													2: 
												*)
	rAxisVelo102D11	:	REAL;					//VELOCITY
	//--------------------------------------------------------------------------
	//Axis102X12
	rArAxisPos102X12	:	ARRAY[0..10] OF REAL;	(*	0: REFERENZ
													1: 
													2: 
												*)
	rAxisVelo102X12	:	REAL;					//VELOCITY
	//--------------------------------------------------------------------------
	//Axis102Y14 P&P
	rArAxisPos102Y14	:	ARRAY[0..10] OF REAL;	(*	
													0: FREI DREHEN
													1: DOSIEREN FLACH
													2: DOSIEREN PICK
													
													5: PLACE
												*)
	rAxisVelo102Y14	:	REAL;					//VELOCITY
	//--------------------------------------------------------------------------
	//Axis102Z15 P&P
	rArAxisPos102Z15	:	ARRAY[0..10] OF REAL;	(*	
													0: OBEN (Frei fahren)
													1: DOSIEREN FLACH
													2: DOSIEREN PICK
													
													5: PLACE
												*)
	rAxisVelo102Z15	:	REAL;					//VELOCITY
	//--------------------------------------------------------------------------
	//Axis102Z16
	rArAxisPos102Z16	:	ARRAY[0..10] OF REAL;	(*	0: FLACH
													1: DOSIEREN Basis
													2: Korrekturwert
													3: PRESSEN
												*)
	rAxisVelo102Z16	:	REAL;					//VELOCITY
	//--------------------------------------------------------------------------
	//Axis102Z17
	rArAxisPos102Z17	:	ARRAY[0..10] OF REAL;	(*	0: FLACH
													1: DOSIEREN Basis
													2: Korrekturwert
													3: PRESSEN
												*)
	rAxisVelo102Z17	:	REAL;					//VELOCITY
	//--------------------------------------------------------------------------
	//Axis102Z18
	rArAxisPos102Z18	:	ARRAY[0..10] OF REAL;	(*	0: FLACH
													1: DOSIEREN Basis
													2: Korrekturwert
													3: PRESSEN
												*)
	rAxisVelo102Z18	:	REAL;					//VELOCITY
	//--------------------------------------------------------------------------
	//Axis102Z19
	rArAxisPos102Z19	:	ARRAY[0..10] OF REAL;	(*	0: FLACH
													1: DOSIEREN Basis
													2: Korrekturwert
													3: PRESSEN
												*)
	rAxisVelo102Z19	:	REAL;					//VELOCITY
	//--------------------------------------------------------------------------
	//Axis102Y40
	rArAxisPos102Y40	:	ARRAY[0..10] OF REAL;	(*	0: REFERENZ
													1: 
													2: 
												*)
	rAxisVelo102Y40	:	REAL;					//VELOCITY
	//--------------------------------------------------------------------------
	//Axis102D41
	rArAxisPos102D41	:	ARRAY[0..10] OF REAL;	(*	0: REFERENZ
													1: 
													2: 
												*)
	rAxisVelo102D41	:	REAL;					//VELOCITY
	//--------------------------------------------------------------------------
	//Axis102Y44 P&P
	rArAxisPos102Y44	:	ARRAY[0..10] OF REAL;	(*	
													0: FREI DREHEN
													1: DOSIEREN FLACH
													2: DOSIEREN PICK
													
													5: PLACE
												*)
	rAxisVelo102Y44	:	REAL;					//VELOCITY
	//--------------------------------------------------------------------------
	//Axis102Z45 P&P
	rArAxisPos102Z45	:	ARRAY[0..10] OF REAL;	(*	
													0: OBEN
													1: DOSIEREN FLACH
													2: DOSIEREN PICK
													3: PICK DEPART
													
													5: PLACE
												*)
	rAxisVelo102Z45	:	REAL;					//VELOCITY
	//--------------------------------------------------------------------------
	//Axis102Z46
	rArAxisPos102Z46	:	ARRAY[0..10] OF REAL;	(*	0: FLACH
													1: DOSIEREN Basis
													2: Korrekturwert
													3: PRESSEN
												*)
	rAxisVelo102Z46	:	REAL;					//VELOCITY
	//--------------------------------------------------------------------------
	//Axis102Z47
	rArAxisPos102Z47	:	ARRAY[0..10] OF REAL;	(*	0: FLACH
													1: DOSIEREN Basis
													2: Korrekturwert
													3: PRESSEN
												*)
	rAxisVelo102Z47	:	REAL;					//VELOCITY
	//--------------------------------------------------------------------------
	//Axis102Z48
	rArAxisPos102Z48	:	ARRAY[0..10] OF REAL;	(*	0: FLACH
													1: DOSIEREN Basis
													2: Korrekturwert
													3: PRESSEN
												*)
	rAxisVelo102Z48	:	REAL;					//VELOCITY
	//--------------------------------------------------------------------------
	//Axis102Z49
	rArAxisPos102Z49	:	ARRAY[0..10] OF REAL;	(*	0: FLACH
													1: DOSIEREN Basis
													2: Korrekturwert
													3: PRESSEN
												*)
	rAxisVelo102Z49	:	REAL;					//VELOCITY
	//--------------------------------------------------------------------------
	//Axis106Z10
	rArAxisPos106Z10	:	ARRAY[0..10] OF REAL;	(*	0: REFERENZ OBEN
													1: GET
													2: SET
												*)
	rAxisVelo106Z10	:	REAL;					//VELOCITY
	//--------------------------------------------------------------------------
	//Axis106D11
	rArAxisPos106D11	:	ARRAY[0..10] OF REAL;	(*	0: REFERENZ
													1: GR1 WT
													2: GR2 WT
													3: GR1 NIO
													4: GR2 NIO
												*)
	rAxisVelo106D11	:	REAL;					//VELOCITY
	//--------------------------------------------------------------------------
	//Axis108Y5
	rArAxisPos108Y05	:	ARRAY[0..10] OF REAL;	(*	0: REFERENZ
													1: ST108A RUNDTISCH ENTNAHME
													2: ST108B WT Absetzen 
													
													9: NIO
												*)
	rAxisVelo108Y05	:	REAL;					//VELOCITY
	//--------------------------------------------------------------------------
	//Axis108Z06
	rArAxisPos108Z06	:	ARRAY[0..10] OF REAL;	(*	0: REFERENZ
													1: ENTNAHME RUNDTISCH
													2: ABSETZEN WT
													
													9: NIO
												*)
	rAxisVelo108Z06	:	REAL;					//VELOCITY
	
	//--------------------------------------------------------------------------
	//Axis101D07
	rArAxisPos108D07	:	ARRAY[0..10] OF REAL;	(*	
													0: REFERENZ - ÜBERGABE ST108B
													1: NEST#1  45°
													2: NEST#2 135°
													3: NEST#4 225°
													4: NEST#3 315°
												*)
	rAxisVelo108D07	:	REAL;					//VELOCITY
	//--------------------------------------------------------------------------
	//Axis109Y10
	rArAxisPos109Y10	:	ARRAY[0..10] OF REAL;	(*	0: REFERENZ
													1: RUNDTISCH WT
													2: IO 
													
													9: NIO
												*)
	rAxisVelo109Y10	:	REAL;					//VELOCITY
	//--------------------------------------------------------------------------
	//Axis109Z11
	rArAxisPos109Z11	:	ARRAY[0..10] OF REAL;	(*	0: REFERENZ OBEN
													1: WT
													2: IO
													
													9: NIO
												*)
	rAxisVelo109Z11	:	REAL;					//VELOCITY
	//--------------------------------------------------------------------------
	//Axis120Z10
	rArAxisPos120Z10	:	ARRAY[0..10] OF REAL;	(*	0: REFERENZ
													1: 
													2: 
												*)
	rAxisVelo120Z10	:	REAL;					//VELOCITY
	//--------------------------------------------------------------------------
	//Axis120X11
	rArAxisPos120X11	:	ARRAY[0..10] OF REAL;	(*	0: REFERENZ
													1: 
													2: 
												*)
	rAxisVelo120X11	:	REAL;					//VELOCITY


	//--------------------------------------------------------------------------
	// HUBTÜREN
	//--------------------------------------------------------------------------
	//Axis190Z01									#191
	POSMIN_Axis190Z01: REAL := 5;
	POSMAX_Axis190Z01: REAL := 410;
	VELOMAX_Axis190Z01: REAL := 100;
	VELOMANU_Axis190Z01: REAL := 30;
	
	Axis190Z01			:	AXIS_REF;	// Referenz Axis 
	rActPos190Z01		:	REAL;		// Aktuelle Position
	bInPos190Z01		:	BYTE;		// Achse in Position  (99= nicht in Pos)

	rArAxisPos190Z01	:	ARRAY[0..10] OF REAL;	(*	0: REFERENZ
													1: OBEN
													2: UNTEN
												*)
	rAxisVelo190Z01	:	REAL;					//VELOCITY			

	//--------------------------------------------------------------------------
	//Axis190Z02									#192
	POSMIN_Axis190Z02: REAL := 5;
	POSMAX_Axis190Z02: REAL := 410;
	VELOMAX_Axis190Z02: REAL := 100;
	VELOMANU_Axis190Z02: REAL := 30;
	
	Axis190Z02			:	AXIS_REF;	// Referenz Axis 
	rActPos190Z02		:	REAL;		// Aktuelle Position
	bInPos190Z02		:	BYTE;		// Achse in Position  (99= nicht in Pos)

	rArAxisPos190Z02	:	ARRAY[0..10] OF REAL;	(*	0: REFERENZ
													1: OBEN
													2: UNTEN
												*)
	rAxisVelo190Z02	:	REAL;					//VELOCITY	

	//--------------------------------------------------------------------------
	//Axis190Z03									#193
	POSMIN_Axis190Z03: REAL := 5;
	POSMAX_Axis190Z03: REAL := 410;
	VELOMAX_Axis190Z03: REAL := 100;
	VELOMANU_Axis190Z03: REAL := 30;
	
	Axis190Z03			:	AXIS_REF;	// Referenz Axis 
	rActPos190Z03		:	REAL;		// Aktuelle Position
	bInPos190Z03		:	BYTE;		// Achse in Position  (99= nicht in Pos)

	rArAxisPos190Z03	:	ARRAY[0..10] OF REAL;	(*	0: REFERENZ
													1: OBEN
													2: UNTEN
												*)
	rAxisVelo190Z03	:	REAL;					//VELOCITY		

	//--------------------------------------------------------------------------
	//Axis190Z04									#194
	POSMIN_Axis190Z04: REAL := 5;
	POSMAX_Axis190Z04: REAL := 410;
	VELOMAX_Axis190Z04: REAL := 100;
	VELOMANU_Axis190Z04: REAL := 30;
	
	Axis190Z04			:	AXIS_REF;	// Referenz Axis 
	rActPos190Z04		:	REAL;		// Aktuelle Position
	bInPos190Z04		:	BYTE;		// Achse in Position  (99= nicht in Pos)

	rArAxisPos190Z04	:	ARRAY[0..10] OF REAL;	(*	0: REFERENZ
													1: OBEN
													2: UNTEN
												*)
	rAxisVelo190Z04	:	REAL;					//VELOCITY															
END_VAR]]></Declaration>
  </GVL>
</TcPlcObject>